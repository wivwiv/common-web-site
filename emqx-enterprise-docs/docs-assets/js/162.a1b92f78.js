(window.webpackJsonp=window.webpackJsonp||[]).push([[162],{1497:function(e,s,t){"use strict";t.r(s);var n=t(10),r=Object(n.a)({},(function(){var e=this,s=e.$createElement,n=e._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"extension-protocol"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#extension-protocol"}},[e._v("#")]),e._v(" Extension Protocol")]),e._v(" "),n("p",[n("strong",[e._v("Extension Protocol")]),e._v(" is provided by the "),n("strong",[e._v("emqx-exproto")]),e._v(" plugin, which allows other programming languages (e.g. Python, Java, etc.) to process bytes directly for parsing private protocols and provides a Pub/Sub interface for message exchange with EMQX.")]),e._v(" "),n("p",[e._v("This feature gives EMQX the power of scalability to handle any private protocol in a user-friendly programming language and enjoy the benefits of extremely high concurrent connections brought by the EMQX.")]),e._v(" "),n("h2",{attrs:{id:"features"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#features"}},[e._v("#")]),e._v(" Features")]),e._v(" "),n("ul",[n("li",[e._v("Extremely scalable. Supports all major programming languages using gRPC as the RPC communication framework")]),e._v(" "),n("li",[e._v("Fully asynchronous IO. The connection layer is implemented as fully asynchronous non-blocking I/O")]),e._v(" "),n("li",[e._v("Transparent connection layer. Full support for TCP/TLS UDP/DTLS type connection management, and provides a unified API for the upper layers")]),e._v(" "),n("li",[e._v("Connection management capabilities. For example, maximum number of connections, connection and throughput rate limits, IP blacklisting, etc.")])]),e._v(" "),n("h2",{attrs:{id:"design"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#design"}},[e._v("#")]),e._v(" Design")]),e._v(" "),n("p",[n("img",{attrs:{src:t(502),alt:"Extension-Protocol Arch"}})]),e._v(" "),n("p",[e._v("The interfaces provided by emqx-exproto:")]),e._v(" "),n("ol",[n("li",[n("p",[n("strong",[e._v("Connection Layer:")]),e._v(" This layer mainly "),n("strong",[e._v("maintains the life cycle of the socket, and the sending/receiving of data")]),e._v(". Included:")]),e._v(" "),n("ul",[n("li",[e._v("Listens on a port. When a new TCP/UDP connection arrives, a connection process is started to maintain the state of the connection.")]),e._v(" "),n("li",[e._v("Call the "),n("code",[e._v("OnSocketCreated")]),e._v(" callback. Used to notify the user's server that "),n("strong",[e._v("a new connection has been established")]),e._v(".")]),e._v(" "),n("li",[e._v("Call "),n("code",[e._v("OnSocketClosed")]),e._v(" callback. Used to notify the user's server that a connection "),n("strong",[e._v("has been closed")]),e._v(".")]),e._v(" "),n("li",[e._v("Call "),n("code",[e._v("OnReceivedBytes")]),e._v(" callback. Used to notify the user's server that "),n("strong",[e._v("the connection received new packets")]),e._v(".")]),e._v(" "),n("li",[e._v("Provides the "),n("code",[e._v("Send")]),e._v(" interface. Called by user's server to "),n("strong",[e._v("send packets")]),e._v(".")]),e._v(" "),n("li",[e._v("Provides the "),n("code",[e._v("Close")]),e._v(" interface. Called by user's server. "),n("strong",[e._v("For actively closing the connection")]),e._v(".")])])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("Protocol/Session Layer:")]),e._v(" This layer primarily "),n("strong",[e._v("provides the PUB/SUB interface")]),e._v(" for message interoperability with the EMQX. Includes:")]),e._v(" "),n("ul",[n("li",[e._v("Provides the "),n("code",[e._v("Authenticate")]),e._v(" interface. Called by user's server to register clients into EMQX.")]),e._v(" "),n("li",[e._v("Provides the "),n("code",[e._v("StartTimer")]),e._v(" interface. Called by user's server to start a timer such as a heartbeat for the connected process.")]),e._v(" "),n("li",[e._v("Provides the "),n("code",[e._v("Publish")]),e._v(" interface. Called by user's server to publish messages to the EMQX.")]),e._v(" "),n("li",[e._v("Provides the "),n("code",[e._v("Subscribe")]),e._v(" interface. Called by user's server to subscribe to a topic to receive certain downlink messages from the EMQX.")]),e._v(" "),n("li",[e._v("Provides the "),n("code",[e._v("Unsubscribe")]),e._v(" interface. Called by user's server to unsubscribe from a topic.")]),e._v(" "),n("li",[e._v("Calls the "),n("code",[e._v("OnTimerTimeout")]),e._v(" callback. Used to handle timer timeout events")]),e._v(" "),n("li",[e._v("Call the "),n("code",[e._v("OnReceivedMessages")]),e._v(" callback. Used to receive downlink messages (After a successful subscription to a topic, this method will be called back if there are messages on the topic)")])])])]),e._v(" "),n("h2",{attrs:{id:"apis"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#apis"}},[e._v("#")]),e._v(" APIs")]),e._v(" "),n("p",[e._v("From a gRPC perspective, ExProto acts as a client to send callback requests to the "),n("code",[e._v("ConnectionHandler")]),e._v(" service. It also acts as a server side to provide the "),n("code",[e._v("ConnectionAdapter")]),e._v(" service to user's server to provide calls to various interfaces. As shown in the figure.")]),e._v(" "),n("p",[n("img",{attrs:{src:t(400),alt:"Extension Protocol gRPC Arch"}})]),e._v(" "),n("p",[e._v("The services defination see: "),n("a",{attrs:{href:"https://github.com/emqx/emqx/blob/v4.3-beta.1/apps/emqx_exproto/priv/protos/exproto.proto",target:"_blank",rel:"noopener noreferrer"}},[e._v("exproto.proto"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("For examples:")]),e._v(" "),n("div",{staticClass:"language-protobuff line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('syntax = "proto3";\n\npackage emqx.exproto.v1;\n\n// The Broker side serivce. It provides a set of APIs to\n// handle a protcol access\nservice ConnectionAdapter {\n\n  // -- socket layer\n\n  rpc Send(SendBytesRequest) returns (CodeResponse) {};\n\n  rpc Close(CloseSocketRequest) returns (CodeResponse) {};\n\n  // -- protocol layer\n\n  rpc Authenticate(AuthenticateRequest) returns (CodeResponse) {};\n\n  rpc StartTimer(TimerRequest) returns (CodeResponse) {};\n\n  // -- pub/sub layer\n\n  rpc Publish(PublishRequest) returns (CodeResponse) {};\n\n  rpc Subscribe(SubscribeRequest) returns (CodeResponse) {};\n\n  rpc Unsubscribe(UnsubscribeRequest) returns (CodeResponse) {};\n}\n\nservice ConnectionHandler {\n\n  // -- socket layer\n\n  rpc OnSocketCreated(SocketCreatedRequest) returns (EmptySuccess) {};\n\n  rpc OnSocketClosed(SocketClosedRequest) returns (EmptySuccess) {};\n\n  rpc OnReceivedBytes(ReceivedBytesRequest) returns (EmptySuccess) {};\n\n  // -- pub/sub layer\n\n  rpc OnTimerTimeout(TimerTimeoutRequest) returns (EmptySuccess) {};\n\n  rpc OnReceivedMessages(ReceivedMessagesRequest) returns (EmptySuccess) {};\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br"),n("span",{staticClass:"line-number"},[e._v("15")]),n("br"),n("span",{staticClass:"line-number"},[e._v("16")]),n("br"),n("span",{staticClass:"line-number"},[e._v("17")]),n("br"),n("span",{staticClass:"line-number"},[e._v("18")]),n("br"),n("span",{staticClass:"line-number"},[e._v("19")]),n("br"),n("span",{staticClass:"line-number"},[e._v("20")]),n("br"),n("span",{staticClass:"line-number"},[e._v("21")]),n("br"),n("span",{staticClass:"line-number"},[e._v("22")]),n("br"),n("span",{staticClass:"line-number"},[e._v("23")]),n("br"),n("span",{staticClass:"line-number"},[e._v("24")]),n("br"),n("span",{staticClass:"line-number"},[e._v("25")]),n("br"),n("span",{staticClass:"line-number"},[e._v("26")]),n("br"),n("span",{staticClass:"line-number"},[e._v("27")]),n("br"),n("span",{staticClass:"line-number"},[e._v("28")]),n("br"),n("span",{staticClass:"line-number"},[e._v("29")]),n("br"),n("span",{staticClass:"line-number"},[e._v("30")]),n("br"),n("span",{staticClass:"line-number"},[e._v("31")]),n("br"),n("span",{staticClass:"line-number"},[e._v("32")]),n("br"),n("span",{staticClass:"line-number"},[e._v("33")]),n("br"),n("span",{staticClass:"line-number"},[e._v("34")]),n("br"),n("span",{staticClass:"line-number"},[e._v("35")]),n("br"),n("span",{staticClass:"line-number"},[e._v("36")]),n("br"),n("span",{staticClass:"line-number"},[e._v("37")]),n("br"),n("span",{staticClass:"line-number"},[e._v("38")]),n("br"),n("span",{staticClass:"line-number"},[e._v("39")]),n("br"),n("span",{staticClass:"line-number"},[e._v("40")]),n("br"),n("span",{staticClass:"line-number"},[e._v("41")]),n("br"),n("span",{staticClass:"line-number"},[e._v("42")]),n("br"),n("span",{staticClass:"line-number"},[e._v("43")]),n("br"),n("span",{staticClass:"line-number"},[e._v("44")]),n("br"),n("span",{staticClass:"line-number"},[e._v("45")]),n("br")])]),n("h2",{attrs:{id:"developing-guide"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#developing-guide"}},[e._v("#")]),e._v(" Developing Guide")]),e._v(" "),n("p",[e._v("The user needs to implement the gRPC service of "),n("code",[e._v("ConnectionHandler")]),e._v(" to receive callback events from EMQX.")]),e._v(" "),n("p",[e._v("The main development steps are as following:")]),e._v(" "),n("ol",[n("li",[e._v("Copy the "),n("code",[e._v("lib/emqx_exproto-<x.y.z>/priv/protos/exproto.proto")]),e._v(" file to your project.")]),e._v(" "),n("li",[e._v("Generate the code for the gRPC server and client side of "),n("code",[e._v("exproto.proto")]),e._v(" using the gRPC framework for the corresponding programming language.")]),e._v(" "),n("li",[e._v("Implement the interfaces defined in exhook.proto on demand")])]),e._v(" "),n("p",[e._v("Once the development is complete, the service needs to be deployed to a server that can communicate with EMQX and ensure that the ports are open.")]),e._v(" "),n("p",[e._v("Then modify the server configuration in "),n("code",[e._v("etc/plugins/emqx_exproto.conf")]),e._v(", for example:")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("\n## The ConnectionAdapter services listen on\nexproto.server.http.port = 9100\n\n## The ExProto listen on for accepting Client connection\nexproto.listener.protoname = tcp://0.0.0.0:7993\n\n## The ConnectionHandler callback address\nexproto.listener.protoname.connection_handler_url = http://127.0.0.1:9001\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br")])]),n("p",[e._v("Start the "),n("code",[e._v("emqx_exproto")]),e._v(" plugin and observe the output.")]),e._v(" "),n("p",[e._v("One of the gRPC frameworks for each language can be found at: "),n("a",{attrs:{href:"https://github.com/grpc-ecosystem/awesome-grpc",target:"_blank",rel:"noopener noreferrer"}},[e._v("grpc-ecosystem/awesome-grpc"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("We also provide sample programs for some common programming languages: "),n("a",{attrs:{href:"https://github.com/emqx/emqx-extension-examples",target:"_blank",rel:"noopener noreferrer"}},[e._v("emqx-extension-examples"),n("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports},400:function(e,s,t){e.exports=t.p+"docs-assets/img/exproto-grpc-arch.b6feed73.jpg"},502:function(e,s,t){e.exports=t.p+"docs-assets/img/exproto-arch.b5b2e7d9.jpg"}}]);