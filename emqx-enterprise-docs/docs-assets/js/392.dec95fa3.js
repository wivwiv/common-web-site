(window.webpackJsonp=window.webpackJsonp||[]).push([[392],{1838:function(s,t,a){"use strict";a.r(t);var n=a(10),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"编解码举例-protobuf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编解码举例-protobuf"}},[s._v("#")]),s._v(" 编解码举例 - Protobuf")]),s._v(" "),a("h2",{attrs:{id:"规则需求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#规则需求"}},[s._v("#")]),s._v(" 规则需求")]),s._v(" "),a("p",[s._v('设备发布一个使用 Protobuf 编码的二进制消息，需要通过规则引擎匹配过后，将消息重新发布到与 "name" 字段相关的主题上。主题的格式为 "person/${name}"。')]),s._v(" "),a("p",[s._v('比如，将 "name" 字段为 "Shawn" 的消息重新发布到主题 "person/Shawn"。')]),s._v(" "),a("h2",{attrs:{id:"创建-schema"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建-schema"}},[s._v("#")]),s._v(" 创建 Schema")]),s._v(" "),a("p",[s._v("在 EMQX 的 "),a("a",{attrs:{href:"http://127.0.0.1:18083/#/schemas/0?oper=create",target:"_blank",rel:"noopener noreferrer"}},[s._v("Dashboard"),a("OutboundLink")],1),s._v(" 界面，使用下面的参数创建一个 Protobuf Schema:")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("名称：protobuf_person")])]),s._v(" "),a("li",[a("p",[s._v("编解码类型：protobuf")])]),s._v(" "),a("li",[a("p",[s._v("Schema：下面的 protobuf schema 定义了一个 Person 消息。")])])]),s._v(" "),a("div",{staticClass:"language-protobuf line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-protobuf"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("message")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("required")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("required")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int32")]),s._v(" id "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("optional")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v(" email "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"创建规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建规则"}},[s._v("#")]),s._v(" 创建规则")]),s._v(" "),a("p",[a("strong",[s._v("使用刚才创建好的 Schema 来编写规则 SQL 语句：")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v("\n  schema_decode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'protobuf_person'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" payload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Person'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" payload\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"t/#"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v("\n  person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Shawn'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("这里的关键点在于 "),a("code",[s._v("schema_decode('protobuf_person', payload, 'Person')")]),s._v(":")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("schema_decode")]),s._v(" 函数将 payload 字段的内容按照 'protobuf_person' 这个 Schema 来做解码;")]),s._v(" "),a("li",[a("code",[s._v("as person")]),s._v(' 将解码后的值保存到变量 "person" 里;')]),s._v(" "),a("li",[s._v("最后一个参数 "),a("code",[s._v("Person")]),s._v(" 指明了 payload 中的消息的类型是 protobuf schema 里定义的 'Person' 类型。")])]),s._v(" "),a("p",[a("strong",[s._v("然后使用以下参数添加动作：")])]),s._v(" "),a("ul",[a("li",[s._v("动作类型：消息重新发布")]),s._v(" "),a("li",[s._v("目的主题：person/${person.name}")]),s._v(" "),a("li",[s._v("消息内容模板：${person}")])]),s._v(" "),a("p",[s._v('这个动作将解码之后的 "person" 以 JSON 的格式发送到 '),a("code",[s._v("person/${person.name}")]),s._v(" 这个主题。其中"),a("code",[s._v("${person.name}")]),s._v(' 是个变量占位符，将在运行时被替换为消息内容中 "name" 字段的值。')]),s._v(" "),a("h2",{attrs:{id:"设备端代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设备端代码"}},[s._v("#")]),s._v(" 设备端代码")]),s._v(" "),a("p",[s._v("规则创建好之后，就可以模拟数据进行测试了。")]),s._v(" "),a("p",[s._v('下面的代码使用 Python 语言填充了一个 Person 消息并编码为二进制数据，然后将其发送到 "t/1" 主题。详见 '),a("a",{attrs:{href:"https://github.com/terry-xiaoyu/schema-registry-examples/blob/master/protobuf/pb2_mqtt.py",target:"_blank",rel:"noopener noreferrer"}},[s._v("完整代码"),a("OutboundLink")],1),s._v("。")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("publish_msg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    p "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" person_pb2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("id")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Shawn"')]),s._v("\n    p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("email "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"liuxy@emqx.io"')]),s._v("\n    message "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SerializeToString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    topic "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"t/1"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"publish to topic: t/1, payload:"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("publish"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("topic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" payload"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" qos"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" retain"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h2",{attrs:{id:"检查规则执行结果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#检查规则执行结果"}},[s._v("#")]),s._v(" 检查规则执行结果")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("在 Dashboard 的 "),a("a",{attrs:{href:"http://127.0.0.1:18083/#/websocket",target:"_blank",rel:"noopener noreferrer"}},[s._v("Websocket"),a("OutboundLink")],1),s._v(' 工具里，登录一个 MQTT Client 并订阅 "person/#"。')])]),s._v(" "),a("li",[a("p",[s._v("安装 python 依赖，并执行设备端代码:")])])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ pip3 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" protobuf\n$ pip3 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" paho-mqtt\n\n$ python3 ./pb2_mqtt.py\nConnected with result code "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\npublish to topic: t/1, payload: b"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n\\x05Shawn\\x10\\x01\\x1a\\rliuxy@emqx.io'")]),s._v("\nt/1 b"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n\\x05Shawn\\x10\\x01\\x1a\\rliuxy@emqx.io'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[s._v("检查 Websocket 端收到主题为 "),a("code",[s._v("person/Shawn")]),s._v(" 的消息:")])]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"email"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"liuxy@emqx.io"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"id"')]),s._v(":1,"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Shawn"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);