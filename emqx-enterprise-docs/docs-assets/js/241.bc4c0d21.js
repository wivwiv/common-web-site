(window.webpackJsonp=window.webpackJsonp||[]).push([[241],{1506:function(e,t,s){"use strict";s.r(t);var a=s(10),i=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"message-retransmission"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#message-retransmission"}},[e._v("#")]),e._v(" Message retransmission")]),e._v(" "),s("p",[e._v("Message retransmission is part of the MQTT protocol standard specification.")]),e._v(" "),s("p",[e._v("The protocol stipulates that the PUBLISH packets sent to the peer by the "),s("strong",[e._v("server")]),e._v(" and "),s("strong",[e._v("client")]),e._v(" as communication parties must meet their "),s("strong",[e._v("Quality of Service levels")]),e._v(" requirements , such as:")]),e._v(" "),s("ul",[s("li",[e._v("QoS 1: it means that "),s("strong",[e._v("the message is delivered at least once;")]),e._v(" that is, the sender will always resend the message unless it receives confirmation from the peer. This means that the same QoS 1 message may be received multiple times in the upper layer(the application layer of the service) of the MQTT protocol.")]),e._v(" "),s("li",[e._v("QoS 2: it means "),s("strong",[e._v("the message is delivered exactly once;")]),e._v(" that is, the message will only be received once at the upper layer.")])]),e._v(" "),s("p",[e._v("Although PUBLISH packets of QoS 1 and QoS 2 will be resent at the MQTT protocol stack layer, you must remember:")]),e._v(" "),s("ul",[s("li",[e._v("After retransmission of QoS 1 messages happens, these retransmitted PUBLISH packets will also be received at the upper layer of the MQTT protocol stack.")]),e._v(" "),s("li",[e._v("No matter how QoS 2 message is retransmitted, only one PUBLISH packet will be received in the upper layer of the MQTT protocol stack,")])]),e._v(" "),s("h2",{attrs:{id:"basic-configuration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#basic-configuration"}},[e._v("#")]),e._v(" Basic configuration")]),e._v(" "),s("p",[e._v("There are two scenarios that will cause the message to be resent:")]),e._v(" "),s("ol",[s("li",[e._v("After the PUBLISH packet is sent to the peer, and no response is received within the specified time, the packet is resent.")]),e._v(" "),s("li",[e._v("While maintaining the session, after the client reconnects, EMQX Broker will automatically resend the "),s("em",[e._v("unanswered message")]),e._v(" to ensure the correct QoS process.")])]),e._v(" "),s("p",[e._v("It can be configured in "),s("code",[e._v("etc/emqx.conf")]),e._v(":")]),e._v(" "),s("table",[s("thead",[s("tr",[s("th",[e._v("Configuration item")]),e._v(" "),s("th",[e._v("Type")]),e._v(" "),s("th",[e._v("Optional value")]),e._v(" "),s("th",[e._v("Default value")]),e._v(" "),s("th",[e._v("Description")])])]),e._v(" "),s("tbody",[s("tr",[s("td",[e._v("retry_interval")]),e._v(" "),s("td",[e._v("duration")]),e._v(" "),s("td",[e._v("-")]),e._v(" "),s("td",[e._v("30s")]),e._v(" "),s("td",[e._v("Wait for a timeout interval and retransmit the message if no response is received")])])])]),e._v(" "),s("p",[e._v("Generally speaking, you only need to care about the above content.")]),e._v(" "),s("p",[e._v("For more details on how EMQX Broker handles the retransmission of the MQTT protocol, see the following of this article.")]),e._v(" "),s("h2",{attrs:{id:"protocol-specification-and-design"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#protocol-specification-and-design"}},[e._v("#")]),e._v(" Protocol specification and design")]),e._v(" "),s("h3",{attrs:{id:"retransmitted-objects"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#retransmitted-objects"}},[e._v("#")]),e._v(" Retransmitted objects")]),e._v(" "),s("p",[e._v("First, before understanding the retransmission mechanism design of EMQX Broker, we need to ensure that you have understood the transmission process of QoS 1 and QoS 2 in the protocol, otherwise please refer to"),s("a",{attrs:{href:"http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/os/mqtt-v3.1.1-os.html#_Toc398718101",target:"_blank",rel:"noopener noreferrer"}},[e._v("MQTTv3.1.1 - QoS 1: At least once delivery"),s("OutboundLink")],1),e._v(" and "),s("a",{attrs:{href:"http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/os/mqtt-v3.1.1-os.html#_Toc398718102",target:"_blank",rel:"noopener noreferrer"}},[e._v("MQTTv3.1.1 - QoS 2: Exactly once delivery"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("Only a brief review is made to illustrate what are the retransmitted objects under different QoS.")]),e._v(" "),s("h4",{attrs:{id:"qos-1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#qos-1"}},[e._v("#")]),e._v(" QoS 1")]),e._v(" "),s("p",[e._v("QoS 1 requires the message to be delivered at least once; therefore, the message may be continuously retransmitted in the MQTT protocol layer until the sender receives the confirmation message of the message.")]),e._v(" "),s("p",[e._v("The schematic diagram of the process is as follows:")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("               PUBLISH\n#1 Sender  ---------------\x3e  Receiver       (*)\n               PUBACK\n#2 Sender  <---------------  Receiver\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("ul",[s("li",[e._v("Two packets are involved; there are two sending actions totally, one at the sender and one at the receiver; both packets hold the same PacketId.")]),e._v(" "),s("li",[e._v("If the end of the line is marked with an *, it means that the sender may initiate a retransmission if the waiting for the confirmation message is time out.")])]),e._v(" "),s("p",[e._v("It can be seen that "),s("strong",[e._v("QoS 1 messages only need to retransmit PUBLISH messages")])]),e._v(" "),s("h4",{attrs:{id:"qos-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#qos-2"}},[e._v("#")]),e._v(" QoS 2")]),e._v(" "),s("p",[e._v("QoS 2 requires the message to be delivered only once; so when it is implemented, a more complicated process is required. The schematic diagram of the process is as follows:")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("               PUBLISH\n#1 Sender  ---------------\x3e  Receiver       (*)\n               PUBREC\n#2 Sender  <---------------  Receiver\n               PUBREL\n#3 Sender  ---------------\x3e  Receiver       (*)\n               PUBCOM\n#4 Sender  <---------------  Receiver\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br")])]),s("ul",[s("li",[e._v("4 packets are involved; there are 4 sending actions totally, 2 times for each of the sender and receiver; these 4 packets all hold the same PacketId.")]),e._v(" "),s("li",[e._v("If the end of the line is marked with an *, it means that the sender may initiate a retransmission if the waiting for the confirmation message is time out.")])]),e._v(" "),s("p",[e._v("It can be seen that "),s("strong",[e._v("QoS 2 messages only need to retransmit PUBLISH packet and PUBREL packet")])]),e._v(" "),s("p",[e._v("In summary:")]),e._v(" "),s("ul",[s("li",[s("strong",[e._v("Retransmission action")]),e._v(" is triggered under the condition that the expected return is not received within "),s("strong",[e._v("specified time")]),e._v(" after sending the message, and not receiving.")]),e._v(" "),s("li",[s("strong",[e._v("Retransmission object")]),e._v(" only contains the following three types:\n"),s("ul",[s("li",[e._v("QoS 1 PUBLISH packet")]),e._v(" "),s("li",[e._v("QoS 2 PUBLISH packet")]),e._v(" "),s("li",[e._v("QoS 2 PUBREL packet")])])])]),e._v(" "),s("p",[e._v("When EMQX Broker acts as the receiver of PUBLISH messages, it does not require the retransmission operation.")]),e._v(" "),s("h3",{attrs:{id:"inflight-window-and-maximum-receiving-value"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#inflight-window-and-maximum-receiving-value"}},[e._v("#")]),e._v(" Inflight window and maximum receiving value")]),e._v(" "),s("p",[e._v("For the definition and explanation of this concept, please refer to "),s("RouterLink",{attrs:{to:"/en/enterprise/latest/advanced/inflight-window-and-message-queue.html#"}},[e._v("Inflight Window and Message Queue")])],1),e._v(" "),s("p",[e._v("The purpose of introducing these two concepts is to understand:")]),e._v(" "),s("ol",[s("li",[e._v("When EMQX Broker is used as the sender, the retransmitted message must be the message stored in the inflight window.")]),e._v(" "),s("li",[e._v("When EMQX Broker is used as the receiver, and the sender retransmits the message:\n"),s("ul",[s("li",[e._v("For QoS 1, EMQX Broker directly reply PUBACK as response;")]),e._v(" "),s("li",[e._v("For QoS 2, EMQX Broker will release the stored PUBLISH or PUBREL packet in the "),s("em",[e._v("maximum received message")]),e._v(" queue.")])])])]),e._v(" "),s("h3",{attrs:{id:"message-sequence"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#message-sequence"}},[e._v("#")]),e._v(" Message sequence")]),e._v(" "),s("p",[e._v("Of course, the above concepts only need to be understood. What you need to care about most is the change in message order after "),s("strong",[e._v("messages are retransmitted, especially for QoS type 1 messages")]),e._v(". E.g:")]),e._v(" "),s("p",[e._v("Suppose that when the current inflight window is set to 2, EMQX Broker plans to deliver 4 QoS 1 messages to a certain topic on the client. Assume that the client program or the network has experienced problems in the middle of the process, then the entire sending process will become:")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("#1  [4,3,2,1 || ]   -----\x3e   []\n#2  [4,3 || 2, 1]   -----\x3e   [1, 2]\n#3  [4 || 3, 2]     -----\x3e   [1, 2, 3]\n#4  [4 || 3, 2]     -----\x3e   [1, 2, 3, 2, 3]\n#5  [ || 4]         -----\x3e   [1, 2, 3, 2, 3, 4]\n#6  [ || ]          -----\x3e   [1, 2, 3, 2, 3, 4]\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br")])]),s("p",[e._v("There are 6 steps in the process; the left indicates the message queue and inflight window of EMQX Broker,  which is separated by "),s("code",[e._v("||")]),e._v("; the right indicates the sequence of messages received by the client, where each step indicates:")]),e._v(" "),s("ol",[s("li",[e._v("Broker puts 4 messages into the message queue.")]),e._v(" "),s("li",[e._v("Broker sequentially sends "),s("code",[e._v("1")]),e._v(" "),s("code",[e._v("2")]),e._v(" and puts it in the "),s("strong",[e._v("inflight window")]),e._v("; the client only responds to the message "),s("code",[e._v("1")]),e._v("; and at this time due to a problem with the client's sending stream, subsequent responses cannot be sen.")]),e._v(" "),s("li",[e._v("Broker receives the reply of the message "),s("code",[e._v("1")]),e._v("; removes the message"),s("code",[e._v("1")]),e._v(" from the inflight window; and sends out "),s("code",[e._v("3")]),e._v("; continues to wait for the reply of "),s("code",[e._v("2")]),e._v(" "),s("code",[e._v("3")]),e._v(";")]),e._v(" "),s("li",[e._v("When the waiting for the response is time out, broker retransmitted the message  "),s("code",[e._v("2")]),e._v(" "),s("code",[e._v("3")]),e._v("; the client received the retransmitted message "),s("code",[e._v("2")]),e._v(" "),s("code",[e._v("3")]),e._v(" and responded normally.")]),e._v(" "),s("li",[e._v("Broker removed the message  "),s("code",[e._v("2")]),e._v(" "),s("code",[e._v("3")]),e._v(" from the inflight window and sent the message "),s("code",[e._v("4")]),e._v("; the client received the message 4 and responded with a reply.")]),e._v(" "),s("li",[e._v("At this point, all message processing is complete. The sequence of messages received by the client is "),s("code",[e._v("[1, 2, 3, 2, 3, 4]")]),e._v(", and it is reported to the upper layer of the MQTT protocol stack in turn.")])]),e._v(" "),s("p",[e._v("Although there are duplicate messages, this is in full compliance with the specifications of the protocol. The first appearance of each message is in order, and the message  "),s("code",[e._v("2")]),e._v(" "),s("code",[e._v("3")]),e._v(" repeatedly received will carry an identification bit, indicating that it is a retransmission message.")]),e._v(" "),s("p",[e._v("The MQTT protocol and EMQX Broker regard this topic as an "),s("code",[e._v("Ordered Topic")]),e._v(". See: "),s("a",{attrs:{href:"http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/os/mqtt-v3.1.1-os.html#_Toc398718105",target:"_blank",rel:"noopener noreferrer"}},[e._v("MQTTv3.1.1 - Message ordering"),s("OutboundLink")],1),e._v(".")]),e._v(" "),s("p",[e._v("It ensures that under the same topic and QoS, messages are delivered and answered in order.")]),e._v(" "),s("p",[e._v("In addition, if the user expects that QoS 1 and QoS 2 messages under all topics are strictly ordered, the maximum length of the flight window needs to be set to 1, but it will reduce the client's throughput.")]),e._v(" "),s("h3",{attrs:{id:"related-configuration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#related-configuration"}},[e._v("#")]),e._v(" Related configuration")]),e._v(" "),s("p",[e._v("This section lists all the configurations used in the above mechanism. They are all included in "),s("code",[e._v("etc/emqx.conf")]),e._v(":")]),e._v(" "),s("table",[s("thead",[s("tr",[s("th",[e._v("Configuration")]),e._v(" "),s("th",[e._v("Type")]),e._v(" "),s("th",[e._v("Optional value")]),e._v(" "),s("th",[e._v("Default value")]),e._v(" "),s("th",[e._v("Description")])])]),e._v(" "),s("tbody",[s("tr",[s("td",[e._v("mqueue_store_qos0")]),e._v(" "),s("td",[e._v("bool")]),e._v(" "),s("td",[s("code",[e._v("true")]),e._v(", "),s("code",[e._v("false")])]),e._v(" "),s("td",[e._v("true")]),e._v(" "),s("td",[e._v("Whether to store QoS 0 messages in the message queue")])]),e._v(" "),s("tr",[s("td",[e._v("max_mqueue_len")]),e._v(" "),s("td",[e._v("integer")]),e._v(" "),s("td",[e._v(">= 0")]),e._v(" "),s("td",[e._v("1000")]),e._v(" "),s("td",[e._v("Message queue length")])]),e._v(" "),s("tr",[s("td",[e._v("max_inflight")]),e._v(" "),s("td",[e._v("integer")]),e._v(" "),s("td",[e._v(">= 0")]),e._v(" "),s("td",[e._v("0")]),e._v(" "),s("td",[e._v("Inflight window size; default "),s("code",[e._v("0")]),e._v(" means no limit")])]),e._v(" "),s("tr",[s("td",[e._v("max_awaiting_rel")]),e._v(" "),s("td",[e._v("integer")]),e._v(" "),s("td",[e._v(">= 0")]),e._v(" "),s("td",[e._v("0")]),e._v(" "),s("td",[e._v("Maximum reception; default "),s("code",[e._v("0")]),e._v(" means no limit")])]),e._v(" "),s("tr",[s("td",[e._v("await_rel_timeout")]),e._v(" "),s("td",[e._v("durtaion")]),e._v(" "),s("td",[e._v(">  0")]),e._v(" "),s("td",[e._v("300s")]),e._v(" "),s("td",[e._v("The maximum value of timeout in "),s("code",[e._v("Max Receive")]),e._v(" to wait for release; if they are exceeded, the messages are discarded directly")])])])])])}),[],!1,null,null,null);t.default=i.exports}}]);