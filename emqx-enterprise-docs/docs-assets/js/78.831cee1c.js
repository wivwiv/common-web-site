(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{1032:function(t,s,n){t.exports=n.p+"docs-assets/img/exproto-arch.bffb1518.jpg"},1033:function(t,s,n){t.exports=n.p+"docs-assets/img/exproto-add.8559610b.jpg"},1034:function(t,s,n){t.exports=n.p+"docs-assets/img/exproto-conf-1.d8878a54.jpg"},1035:function(t,s,n){t.exports=n.p+"docs-assets/img/exproto-conf-2.4fe67e23.jpg"},1036:function(t,s,n){t.exports=n.p+"docs-assets/img/exproto-succ.99623ae0.jpg"},1764:function(t,s,n){"use strict";n.r(s);var a=n(10),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"多语言扩展-协议接入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多语言扩展-协议接入"}},[t._v("#")]),t._v(" 多语言扩展 - 协议接入")]),t._v(" "),a("p",[t._v("在 EMQX e4.2.0 中，我们提供了多语言扩展的支持。其中 "),a("strong",[t._v("多语言扩展协议接入")]),t._v(" 模块允许其他编程语言（例如：Python，Java 等）直接处理字节数据报文实现自定义协议的解析，并提供 Pub/Sub 接口实现与系统的消息交换。")]),t._v(" "),a("p",[t._v("该功能给 EMQX 带来的扩展性十分的强大，它能以用户熟悉的编程语言处理任何的私有协议，并享受由 EMQX 系统带来的极高并发连接的优点。")]),t._v(" "),a("h2",{attrs:{id:"特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特性"}},[t._v("#")]),t._v(" 特性")]),t._v(" "),a("ul",[a("li",[t._v("极强的扩展能力。使用 gRPC 作为 RPC 通信框架，支持各个主流编程语言")]),t._v(" "),a("li",[t._v("完全的异步 IO。连接层以完全的异步非阻塞式 I/O 的方式实现")]),t._v(" "),a("li",[t._v("连接层透明。完全的支持 TCP\\TLS UDP\\DTLS 类型的连接管理，并对上层提供统一个 API")]),t._v(" "),a("li",[t._v("连接管理能力。例如，最大连接数，连接和吞吐的速率限制，IP 黑名单 等")])]),t._v(" "),a("h2",{attrs:{id:"架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#架构"}},[t._v("#")]),t._v(" 架构")]),t._v(" "),a("p",[a("img",{attrs:{src:n(1032),alt:"Extension-Protocol Arch"}})]),t._v(" "),a("p",[t._v("该模块主要需要处理的内容包括：")]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("连接层：")]),t._v(" 该部分主要"),a("strong",[t._v("维持 Socket 的生命周期，和数据的收发")]),t._v("。它的功能要求包括：")]),t._v(" "),a("ul",[a("li",[t._v("监听某个端口。当有新的 TCP/UDP 连接到达后，启动一个连接进程，来维持连接的状态。")]),t._v(" "),a("li",[t._v("调用 "),a("code",[t._v("OnSocketCreated")]),t._v(" 回调。用于通知外部模块"),a("strong",[t._v("已新建立了一个连接")]),t._v("。")]),t._v(" "),a("li",[t._v("调用 "),a("code",[t._v("OnScoektClosed")]),t._v(" 回调。用于通知外部模块连接"),a("strong",[t._v("已关闭")]),t._v("。")]),t._v(" "),a("li",[t._v("调用 "),a("code",[t._v("OnReceivedBytes")]),t._v(" 回调。用于通知外部模块"),a("strong",[t._v("该连接新收到的数据包")]),t._v("。")]),t._v(" "),a("li",[t._v("提供 "),a("code",[t._v("Send")]),t._v(" 接口。供外部模块调用，"),a("strong",[t._v("用于发送数据包")]),t._v("。")]),t._v(" "),a("li",[t._v("提供 "),a("code",[t._v("Close")]),t._v(" 接口。供外部模块调用，"),a("strong",[t._v("用于主动关闭连接")]),t._v("。")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("协议/会话层：")]),t._v(" 该部分主要"),a("strong",[t._v("提供 PUB/SUB 接口")]),t._v("，以实现与 EMQX Broker 系统的消息互通。包括：")]),t._v(" "),a("ul",[a("li",[t._v("提供 "),a("code",[t._v("Authenticate")]),t._v(" 接口。供外部模块调用，用于向集群注册客户端。")]),t._v(" "),a("li",[t._v("提供 "),a("code",[t._v("StartTimer")]),t._v(" 接口。供外部模块调用，用于为该连接进程启动心跳等定时器。")]),t._v(" "),a("li",[t._v("提供 "),a("code",[t._v("Publish")]),t._v(" 接口。供外部模块调用，用于发布消息 EMQX Broker 中。")]),t._v(" "),a("li",[t._v("提供 "),a("code",[t._v("Subscribe")]),t._v(" 接口。供外部模块调用，用于订阅某主题，以实现从 EMQX Broker 中接收某些下行消息。")]),t._v(" "),a("li",[t._v("提供 "),a("code",[t._v("Unsubscribe")]),t._v(" 接口。供外部模块调用，用于取消订阅某主题。")]),t._v(" "),a("li",[t._v("调用 "),a("code",[t._v("OnTimerTimeout")]),t._v(" 回调。用于处理定时器超时的事件。")]),t._v(" "),a("li",[t._v("调用 "),a("code",[t._v("OnReceivedMessages")]),t._v(" 回调。用于接收下行消息（在订阅主题成功后，如果主题上有消息，便会回调该方法）")])])])]),t._v(" "),a("h2",{attrs:{id:"接口设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#接口设计"}},[t._v("#")]),t._v(" 接口设计")]),t._v(" "),a("p",[t._v("从 gRPC 的角度上看，ExProto 会作为客户端向 "),a("code",[t._v("ConnectionHandler")]),t._v(" 服务发送回调请求。同时，它也会作为服务端向外部模块提供 "),a("code",[t._v("ConnectionAdapter")]),t._v(" 服务，以提供 各类接口的调用。如图：")]),t._v(" "),a("p",[a("img",{attrs:{src:n(412),alt:"Extension Protocol gRPC Arch"}})]),t._v(" "),a("p",[t._v("详情参见："),a("a",{attrs:{href:"https://github.com/emqx/emqx/blob/main-v4.3/apps/emqx_exproto/priv/protos/exproto.proto",target:"_blank",rel:"noopener noreferrer"}},[t._v("exproto.proto"),a("OutboundLink")],1),t._v("，例如接口的定义有：")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("syntax "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"proto3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\npackage emqx.exproto.v1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n// The Broker side serivce. It provides a "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" of APIs to\n// handle a protcol access\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" ConnectionAdapter "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  // -- socket layer\n\n  rpc Send"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SendBytesRequest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" returns "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CodeResponse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  rpc Close"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CloseSocketRequest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" returns "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CodeResponse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  // -- protocol layer\n\n  rpc Authenticate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("AuthenticateRequest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" returns "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CodeResponse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  rpc StartTimer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TimerRequest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" returns "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CodeResponse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  // -- pub/sub layer\n\n  rpc Publish"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PublishRequest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" returns "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CodeResponse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  rpc Subscribe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SubscribeRequest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" returns "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CodeResponse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  rpc Unsubscribe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UnsubscribeRequest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" returns "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CodeResponse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" ConnectionHandler "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  // -- socket layer\n\n  rpc OnSocketCreated"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SocketCreatedRequest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" returns "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EmptySuccess"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  rpc OnSocketClosed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SocketClosedRequest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" returns "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EmptySuccess"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  rpc OnReceivedBytes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ReceivedBytesRequest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" returns "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EmptySuccess"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  // -- pub/sub layer\n\n  rpc OnTimerTimeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TimerTimeoutRequest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" returns "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EmptySuccess"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  rpc OnReceivedMessages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ReceivedMessagesRequest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" returns "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EmptySuccess"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br"),a("span",{staticClass:"line-number"},[t._v("43")]),a("br"),a("span",{staticClass:"line-number"},[t._v("44")]),a("br"),a("span",{staticClass:"line-number"},[t._v("45")]),a("br")])]),a("h2",{attrs:{id:"开发指南"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发指南"}},[t._v("#")]),t._v(" 开发指南")]),t._v(" "),a("p",[t._v("在使用该模块之前，用户需要开发和部署一个 gRPC 的服务，并实现 "),a("code",[t._v("exproto.proto")]),t._v(" 定义的接口。")]),t._v(" "),a("p",[t._v("其步骤如下：")]),t._v(" "),a("ol",[a("li",[t._v("拷贝出当前版本的 "),a("code",[t._v("lib/emqx_exproto-<x.y.z>/priv/protos/exproto.proto")]),t._v(" 文件。")]),t._v(" "),a("li",[t._v("使用对应编程语言的 gRPC 框架，生成 "),a("code",[t._v("exproto.proto")]),t._v(" 的 gRPC 服务端的代码。")]),t._v(" "),a("li",[t._v("实现 exproto.proto 当中 "),a("code",[t._v("ConnectionHandler")]),t._v(" 服务的接口。")])]),t._v(" "),a("p",[t._v("开发完成后，需将该服务部署到与 EMQX 能够通信的服务器上，并保证端口的开放。")]),t._v(" "),a("p",[t._v("其中各个语言的 gRPC 框架可参考："),a("a",{attrs:{href:"https://github.com/grpc-ecosystem/awesome-grpc",target:"_blank",rel:"noopener noreferrer"}},[t._v("grpc-ecosystem/awesome-grpc"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"创建模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建模块"}},[t._v("#")]),t._v(" ## 创建模块")]),t._v(" "),a("p",[t._v("成功部署 gRPC 服务后，通过 dashboard 页面可以开启多语言扩展协议接入模块，并配置以下三部分的内容，即可成功使用：")]),t._v(" "),a("ol",[a("li",[t._v("ExProto 的 "),a("code",[t._v("ConnectionApdapter")]),t._v(" 服务的监听地址。用于接收 gRPC 请求。")]),t._v(" "),a("li",[t._v("配置 "),a("strong",[t._v("监听器(Listener)")]),t._v("，提供 TCP/UDP/SSL/DTLS 的地址监听。用于监听、接收设备的连接。")]),t._v(" "),a("li",[t._v("为每个监听器指定一个 "),a("code",[t._v("ConnectionHandler")]),t._v(" 的服务地址。用于发送各种事件回调到用户的服务。")])]),t._v(" "),a("p",[t._v("打开 "),a("a",{attrs:{href:"http://127.0.0.1:18083/#/modules",target:"_blank",rel:"noopener noreferrer"}},[t._v("EMQX Dashboard"),a("OutboundLink")],1),t._v("，点击左侧的 “模块” 选项卡，选择添加：")]),t._v(" "),a("p",[a("img",{attrs:{src:n(390),alt:"Modules"}})]),t._v(" "),a("p",[t._v("选择 “多语言扩展协议接入”：")]),t._v(" "),a("p",[a("img",{attrs:{src:n(1033),alt:"Add ExProto Module"}})]),t._v(" "),a("p",[t._v("配置 "),a("code",[t._v("ConnectionAdapter")]),t._v(" 服务的监听地址，和是否为其开启 SSL 监听：")]),t._v(" "),a("p",[a("img",{attrs:{src:n(1034),alt:"Configure ExProto gRPC Server"}})]),t._v(" "),a("p",[t._v("点击 “添加监听器” 为 ExProto 模块配置监听器，其中包括：")]),t._v(" "),a("ol",[a("li",[t._v("监听器的 "),a("code",[t._v("监听地址")]),t._v(" 和 "),a("code",[t._v("监听类型")]),t._v("，它表明以何种方式接收自定义协议的 Socket 连接。")]),t._v(" "),a("li",[t._v("连接处理服务(ConnectionHandler) 的 "),a("code",[t._v("处理器服务地址")]),t._v(" 和可能会有的 SSL 证书配置，它表明 ExProto 如何访问 ConnectionHandler 服务。")])]),t._v(" "),a("p",[a("img",{attrs:{src:n(1035),alt:"Configure ExProto Listener"}})]),t._v(" "),a("p",[t._v("点击确定，完成监听器添加；在点击添加完成模块的创建：")]),t._v(" "),a("p",[a("img",{attrs:{src:n(1036),alt:"Add ExProto Successfully"}})]),t._v(" "),a("p",[t._v("至此，多语言扩展协议接入的配置已经完成。")])])}),[],!1,null,null,null);s.default=e.exports},390:function(t,s,n){t.exports=n.p+"docs-assets/img/modules.89e07c9c.png"},412:function(t,s,n){t.exports=n.p+"docs-assets/img/exproto-grpc-arch.b6feed73.jpg"}}]);