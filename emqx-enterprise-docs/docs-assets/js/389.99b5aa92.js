(window.webpackJsonp=window.webpackJsonp||[]).push([[389],{1834:function(s,t,a){"use strict";a.r(t);var e=a(10),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"编解码举例-自定义-grpc-编解码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编解码举例-自定义-grpc-编解码"}},[s._v("#")]),s._v(" 编解码举例 - 自定义 gRPC 编解码")]),s._v(" "),a("h2",{attrs:{id:"规则需求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#规则需求"}},[s._v("#")]),s._v(" 规则需求")]),s._v(" "),a("p",[s._v("设备发布一个任意的消息，验证自部署的编解码服务能正常工作。")]),s._v(" "),a("h2",{attrs:{id:"创建-parser-grpc-资源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建-parser-grpc-资源"}},[s._v("#")]),s._v(" 创建 Parser gRPC 资源")]),s._v(" "),a("p",[s._v("在 EMQX Dashboard 的 "),a("a",{attrs:{href:"http://127.0.0.1:18083/#/resources",target:"_blank",rel:"noopener noreferrer"}},[s._v("Resource 创建"),a("OutboundLink")],1),s._v(" 界面，使用下面的参数创建一个 Parser gRPC 资源：")]),s._v(" "),a("ul",[a("li",[s._v("URL: http://127.0.0.1:50051")]),s._v(" "),a("li",[s._v("Resource ID: my_grpc_parser_resource")])]),s._v(" "),a("h2",{attrs:{id:"创建-schema"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建-schema"}},[s._v("#")]),s._v(" 创建 Schema")]),s._v(" "),a("p",[s._v("在 EMQX Dashboard 的 "),a("a",{attrs:{href:"http://127.0.0.1:18083/#/schemas/0?oper=create",target:"_blank",rel:"noopener noreferrer"}},[s._v("Schema 创建"),a("OutboundLink")],1),s._v(" 界面，使用下面的参数创建一个 3rd-Party Schema:")]),s._v(" "),a("ol",[a("li",[s._v("名称: my_grpc_parser")]),s._v(" "),a("li",[s._v("编解码类型: 3rd-party")]),s._v(" "),a("li",[s._v("第三方类型: Resources")]),s._v(" "),a("li",[s._v("Resource: my_grpc_parser_resource（这里选择我们刚才创建的 Parser gRPC 资源）")])]),s._v(" "),a("p",[s._v("其他配置保持默认。")]),s._v(" "),a("h2",{attrs:{id:"创建规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建规则"}},[s._v("#")]),s._v(" 创建规则")]),s._v(" "),a("p",[a("strong",[s._v("使用刚才创建好的 Schema 来编写规则 SQL 语句：")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v("\n\n  schema_encode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'my_grpc_parser'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" payload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" encode_resp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  schema_decode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'my_grpc_parser'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" encode_resp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" decode_resp\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"t/#"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("这个 SQL 语句首先对数据做了 Encode，然后又做了 Decode，目的在于验证编解码过程是否正确:")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("schema_encode")]),s._v(" 函数将 payload 字段的内容按照 'my_grpc_parser' 这个 Schema 来做编码，结果存储到 "),a("code",[s._v("encode_resp")]),s._v(" 这个 Map 里;")]),s._v(" "),a("li",[a("code",[s._v("schema_decode")]),s._v(" 函数将编码结果内容按照 'my_grpc_parser' 这个 Schema 来做解码，结果存储到 "),a("code",[s._v("decode_resp")]),s._v(" 这个变量里;")])]),s._v(" "),a("p",[s._v("最终这个 SQL 语句的筛选结果是 "),a("code",[s._v("encode_resp")]),s._v(" 和 "),a("code",[s._v("decode_resp")]),s._v(" 这两个变量。")]),s._v(" "),a("p",[a("strong",[s._v("然后使用以下参数添加动作：")])]),s._v(" "),a("ul",[a("li",[s._v("动作类型：检查(调试)")])]),s._v(" "),a("p",[s._v("这个检查动作会把 SQL 语句筛选的结果打印到 emqx 控制台 (erlang shell) 里。")]),s._v(" "),a("p",[s._v('如果是使用 emqx console 启动的服务，打印会直接显示在控制台里；如果是使用 emqx start 启动的服务，打印会输出到日志目录下的 erlang.log.N 文件里，这里 "N" 为整数，比如 "erlang.log.1", "erlang.log.2"。')]),s._v(" "),a("h2",{attrs:{id:"编解码服务端代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编解码服务端代码"}},[s._v("#")]),s._v(" 编解码服务端代码")]),s._v(" "),a("p",[s._v("规则创建好之后，就可以模拟数据进行测试了。所以首先需要编写一个自己的编解码服务。")]),s._v(" "),a("p",[s._v("下面的代码使用 Python 语言实现了一个 gRPC 编解码服务。\n为简单起见，这个服务在编码时，只是对收到的字符串做 base64_encode，解码时进行 base64_decode。\n详见 "),a("a",{attrs:{href:"https://github.com/terry-xiaoyu/emqx-schema-grpc-python-server",target:"_blank",rel:"noopener noreferrer"}},[s._v("完整代码"),a("OutboundLink")],1),s._v(":")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Parser")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("emqx_schema_registry_pb2_grpc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ParserServicer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HealthCheck")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" request\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Parse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"parser got encode request: "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            encoded_d "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" base64"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("b64encode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" emqx_schema_registry_pb2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ParseResponse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("code"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'SUCCESS'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" message"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ok"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                result"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("encoded_d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"parser got decode request: "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            decoded_d "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" base64"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("b64decode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" emqx_schema_registry_pb2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ParseResponse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("code"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'SUCCESS'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" message"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ok"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                result"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("decoded_d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("serve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    server "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" grpc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("futures"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ThreadPoolExecutor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("max_workers"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    emqx_schema_registry_pb2_grpc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("add_ParserServicer_to_server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n        Parser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("add_insecure_port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[::]:50051'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("wait_for_termination"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" __name__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'__main__'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    logging"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("basicConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    serve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br")])]),a("p",[s._v("将这个服务运行起来:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("pip3 install grpcio\npip3 install grpcio-tools\npython3 -m grpc_tools.protoc -I./protos --python_out=. --grpc_python_out=. ./protos/emqx_schema_registry.proto\n\npython3 emqx_schema_registry_server.py\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"检查规则执行结果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#检查规则执行结果"}},[s._v("#")]),s._v(" 检查规则执行结果")]),s._v(" "),a("p",[s._v("由于本示例比较简单，我们直接使用 MQTT Websocket 客户端来模拟设备端发一条消息。")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("在 Dashboard 的 "),a("a",{attrs:{href:"http://127.0.0.1:18083/#/websocket",target:"_blank",rel:"noopener noreferrer"}},[s._v("Websocket"),a("OutboundLink")],1),s._v(' 工具里，登录一个 MQTT Client 并发布一条消息到 "t/1"，内容为 "hello"。')])]),s._v(" "),a("li",[a("p",[s._v("检查 emqx 控制台 (erlang shell) 里的打印:")])])]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("emqx@127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("inspect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n        Selected Data: "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#{<<"decode_resp">> =>')]),s._v("\n                             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#{code => 'SUCCESS',message => <<\"ok\">>,")]),s._v("\n                               result "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(",\n                         "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"encode_resp"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n                             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#{code => 'SUCCESS',message => <<\"ok\">>,")]),s._v("\n                               result "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aGVsbG8="')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        Envs: "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#{'__bindings__' =>")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#{'Id' => <<\"inspect_1649928007719256000\">>,")]),s._v("\n                      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Params'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#{}},")]),s._v("\n                clientid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mqttjs_4c8818ae"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(",event "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'message.publish'")]),s._v(",\n                flags "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#{dup => false,retain => false},")]),s._v("\n                headers "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#{peerhost => <<"127.0.0.1">>,properties => #{},')]),s._v("\n                      proto_ver "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(",protocol "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mqtt,username "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(",\n                "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0005DC99CDA113B6F44200000CEB0001"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(",\n                metadata "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#{rule_id => <<"rule:440083">>},')]),s._v("\n                node "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'emqx@127.0.0.1'")]),s._v(",payload "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(",\n                peerhost "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"127.0.0.1"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(",pub_props "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#{},")]),s._v("\n                publish_received_at "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1649928021545")]),s._v(",qos "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(",\n                timestamp "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1649928021545")]),s._v(",topic "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"t/1"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(",\n                username "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        Action Init Params: "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#{}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])]),a("p",[s._v("Select Data 是经过 SQL 语句筛选之后的数据，Envs 是规则引擎内部可用的环境变量，Action Init Params 是动作的初始化参数。这三个数据均为 "),a("code",[s._v("Map")]),s._v(" 格式。")]),s._v(" "),a("p",[s._v("Selected Data 里面的两个字段 "),a("code",[s._v("decode_resp")]),s._v(" 和 "),a("code",[s._v("encode_resp")]),s._v(" 对应 SELECT 语句里面的两个 AS。")]),s._v(" "),a("p",[s._v("因为 "),a("code",[s._v("decode_resp")]),s._v(' 是编码然后再解码之后的结果，所以它又被还原为了我们发送的内容 "hello"，表明编解码插件工作正常。')])])}),[],!1,null,null,null);t.default=r.exports}}]);