(window.webpackJsonp=window.webpackJsonp||[]).push([[374],{1744:function(e,t,s){"use strict";s.r(t);var a=s(10),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"使用教程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用教程"}},[e._v("#")]),e._v(" 使用教程")]),e._v(" "),s("h2",{attrs:{id:"怎么样才能使用-emqx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#怎么样才能使用-emqx"}},[e._v("#")]),e._v(" 怎么样才能使用 EMQX？")]),e._v(" "),s("p",[e._v("EMQX 开源版可免费下载使用，下载地址："),s("a",{attrs:{href:"https://www.emqx.com/en/downloads?product=broker",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.emqx.com/en/downloads?product=broker"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("EMQX 企业版支持下载试用，用户可以在 "),s("a",{attrs:{href:"https://www.emqx.com/en/downloads?product=enterprise",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.emqx.com/en/downloads?product=enterprise"),s("OutboundLink")],1),e._v(" 下载，"),s("a",{attrs:{href:"https://www.emqx.com/zh/licenses#trial",target:"_blank",rel:"noopener noreferrer"}},[e._v("申请试用 license"),s("OutboundLink")],1),e._v("之后即可试用。")]),e._v(" "),s("p",[e._v("另外，还可以在公有云直接创建 EMQX 企业版：")]),e._v(" "),s("ul",[s("li",[s("p",[s("a",{attrs:{href:"https://market.aliyun.com/products/56014009/cmjj029979.html?spm=5176.730005.productlist.d_cmjj029979.69013524xism4L&innerSource=search_EMQ",target:"_blank",rel:"noopener noreferrer"}},[e._v("阿里云"),s("OutboundLink")],1)])]),e._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://appcenter.qingcloud.com/search/category/iot",target:"_blank",rel:"noopener noreferrer"}},[e._v("青云"),s("OutboundLink")],1)])])]),e._v(" "),s("h2",{attrs:{id:"怎样更新-emqx-license"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#怎样更新-emqx-license"}},[e._v("#")]),e._v(" 怎样更新 EMQX license?")]),e._v(" "),s("p",[s("strong",[e._v("标签:")]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#license"}},[s("em",[e._v("License")])])],1),e._v(" "),s("p",[e._v('点击 "Download License" 按钮下载 license, 然后找到您下载的 "license.zip" 文件并解压.')]),e._v(" "),s("p",[e._v("复制压缩包里的两个文件 (emqx.lic, emqx.key) 到 EMQX 的 license 目录.")]),e._v(" "),s("p",[e._v('如果您的 EMQX 是使用 zip 包安装的, 那么压缩包里的两个文件需要拷贝到 "emqx/etc/" 目录;\n如果是用 DEB/RPM 包安装的, 两个文件需要拷贝到 "/etc/emqx/" 目录;\n如果是用 Docker 镜像安装的, 两个文件需要拷贝到 "/opt/emqx/etc/" 目录.')]),e._v(" "),s("p",[e._v("拷贝完成后需要通过命令行重新加载 license 以完成更新：")]),e._v(" "),s("p",[e._v("基础命令：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("emqx_ctl license reload [license 文件所在路径]\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("不同安装方式更新命令如下：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("## 适用于 zip 包\n./bin/emqx_ctl license reload etc/emqx.lic\n\n## DEB/RPM 包安装\nemqx_ctl license reload /etc/emqx/emqx.lic\n\n## Docker 镜像安装\ndocker exec -it emqx-ee emqx_ctl license reload /opt/emqx/etc/emqx.lic\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br")])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("提示")]),e._v(" "),s("p",[e._v("在一个多节点的集群中，"),s("code",[e._v("emqx_ctl license reload")]),e._v("命令只需要在其中一个节点上执行，因为许可证将被复制并应用到所有成员。 每个成员都将在为EMQX配置的数据目录下包含一份新的许可证。")])]),e._v(" "),s("h2",{attrs:{id:"emqx-支持私有协议进行扩展吗-如支持应该如何实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#emqx-支持私有协议进行扩展吗-如支持应该如何实现"}},[e._v("#")]),e._v(" EMQX 支持私有协议进行扩展吗？如支持应该如何实现？")]),e._v(" "),s("p",[s("strong",[e._v("标签:")]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#多协议"}},[s("em",[e._v("多协议")])]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#扩展"}},[s("em",[e._v("扩展")])])],1),e._v(" "),s("p",[e._v("对于新开发的私有协议，EMQX 提供一套 TCP 协议接入规范，私有协议可以按照该规范进行开发接入。如果您所使用的协议已经定型或协议底层非 TCP，可以通过网关进行转换处理，之后通过 MQTT 协议接入 EMQX，或直接联系 EMQ 官方支持私有协议适配。")]),e._v(" "),s("h2",{attrs:{id:"我可以捕获设备上下线的事件吗-该如何使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我可以捕获设备上下线的事件吗-该如何使用"}},[e._v("#")]),e._v(" 我可以捕获设备上下线的事件吗？该如何使用？")]),e._v(" "),s("p",[s("strong",[e._v("标签:")]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#webhook"}},[s("em",[e._v("WebHook")])]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#系统主题"}},[s("em",[e._v("系统主题")])])],1),e._v(" "),s("p",[e._v("EMQX 企业版可以通过以下的三种方式捕获设备的上下线的事件，")]),e._v(" "),s("ul",[s("li",[e._v("Web Hook")]),e._v(" "),s("li",[e._v("订阅相关的 $SYS 主题\n"),s("ul",[s("li",[e._v("$SYS/brokers/${node}/clients/${clientid}/connected")]),e._v(" "),s("li",[e._v("$SYS/brokers/${node}/clients/${clientid}/disconnected")])])]),e._v(" "),s("li",[e._v("直接保存到数据库")])]),e._v(" "),s("p",[e._v("最后一种方法只有在企业版里才支持，支持的数据库包括 Redis、MySQL、PostgreSQL、MongoDB 和 Cassandra。用户可以通过配置文件指定所要保存的数据库，以及监听 client.connected 和 client.disconnected 事件，这样在设备上、下线的时候把数据保存到数据库中。")]),e._v(" "),s("h2",{attrs:{id:"我想限定某些主题只为特定的客户端所使用-emqx-该如何进行配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我想限定某些主题只为特定的客户端所使用-emqx-该如何进行配置"}},[e._v("#")]),e._v(" 我想限定某些主题只为特定的客户端所使用，EMQX 该如何进行配置？")]),e._v(" "),s("p",[s("strong",[e._v("标签:")]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#acl"}},[s("em",[e._v("ACL")])]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#发布订阅"}},[s("em",[e._v("发布订阅")])])],1),e._v(" "),s("p",[e._v("EMQX 支持限定客户端可以使用的主题，从而实现设备权限的管理。如果要做这样的限定，需要在 EMQX 启用 ACL（Access Control List），并禁用匿名访问和关闭无 ACL 命中的访问许可（为了测试调试方便，在默认配置中，后两项是开启的，请注意关闭）。")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("## etc/emqx.conf")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("## ACL nomatch")]),e._v("\nmqtt.acl_nomatch "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" allow\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("p",[e._v("ACL 可以配置在文件 "),s("code",[e._v("etc/acl.conf")]),e._v(" 中，或者配置在后台数据库中。下面例子是 ACL 控制文件的一个配置行，含义是用户 “dashboard” 可以订阅 “$SYS/#” 主题。ACL 在后台数据库中的配置思想与此类似，详细配置方法请参阅 EMQX 文档的 "),s("a",{attrs:{href:"https://docs.emqx.io/tutorial/v3/cn/security/acl.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("ACL 访问控制"),s("OutboundLink")],1),e._v(" 章节。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('{allow, {user, "dashboard"}, subscribe, ["$SYS/#"]}.\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h2",{attrs:{id:"emqx-能做流量控制吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#emqx-能做流量控制吗"}},[e._v("#")]),e._v(" EMQX 能做流量控制吗？")]),e._v(" "),s("p",[s("strong",[e._v("标签:")]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#流量控制"}},[s("em",[e._v("流量控制")])])],1),e._v(" "),s("p",[e._v("能。目前 EMQX 支持连接速率和消息率控制。配置如下：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("## Value: Number\nlistener.tcp.external.max_conn_rate = 1000\n\n## Value: rate,burst\nlistener.tcp.external.rate_limit = 1024,4096\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("h2",{attrs:{id:"emqx-是如何实现支持大规模并发和高可用的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#emqx-是如何实现支持大规模并发和高可用的"}},[e._v("#")]),e._v(" EMQX 是如何实现支持大规模并发和高可用的？")]),e._v(" "),s("p",[s("strong",[e._v("标签:")]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#性能"}},[s("em",[e._v("性能")])]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#高并发"}},[s("em",[e._v("高并发")])])],1),e._v(" "),s("p",[e._v("高并发和高可用是 EMQX 的设计目标，为了实现这些目标 EMQX 中应用了多种技术，比如：")]),e._v(" "),s("ul",[s("li",[e._v("利用 Erlang/OTP 平台的软实时、高并发和容错；")]),e._v(" "),s("li",[e._v("全异步架构；")]),e._v(" "),s("li",[e._v("连接、会话、路由、集群的分层设计；")]),e._v(" "),s("li",[e._v("消息平面和控制平面的分离等。")])]),e._v(" "),s("p",[e._v("在精心设计和实现之后，单个 EMQX Enterprise 节点就可以处理百万级的连接。")]),e._v(" "),s("p",[e._v("EMQX 支持多节点集群，集群下整个系统的性能会成倍高于单节点，并能在单节点故障时保证系统服务不中断。")]),e._v(" "),s("h2",{attrs:{id:"emqx-能把接入的-mqtt-消息保存到数据库吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#emqx-能把接入的-mqtt-消息保存到数据库吗"}},[e._v("#")]),e._v(" EMQX 能把接入的 MQTT 消息保存到数据库吗？")]),e._v(" "),s("p",[s("strong",[e._v("标签:")]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#持久化"}},[s("em",[e._v("持久化")])])],1),e._v(" "),s("p",[e._v("EMQX 企业版支持消息持久化，可以将消息保存到数据库，开源版还暂时不支持。目前 EMQX 企业版消息持久化支持的数据库有：")]),e._v(" "),s("ul",[s("li",[e._v("Redis")]),e._v(" "),s("li",[e._v("MongoDB")]),e._v(" "),s("li",[e._v("MySQL")]),e._v(" "),s("li",[e._v("PostgreSQL")]),e._v(" "),s("li",[e._v("Cassandra")]),e._v(" "),s("li",[e._v("AWS DynamoDB")]),e._v(" "),s("li",[e._v("TimescaleDB")]),e._v(" "),s("li",[e._v("OpenTSDB")]),e._v(" "),s("li",[e._v("InfluxDB")])]),e._v(" "),s("p",[e._v("有关数据持久化的支持请参见 "),s("a",{attrs:{href:"https://docs.emqx.io/tutorial/v3/cn/backend/whats_backend.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("EMQX 数据持久化概览"),s("OutboundLink")],1),e._v("。")]),e._v(" "),s("h2",{attrs:{id:"在服务器端能够直接断开一个-mqtt-连接吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在服务器端能够直接断开一个-mqtt-连接吗"}},[e._v("#")]),e._v(" 在服务器端能够直接断开一个 MQTT 连接吗？")]),e._v(" "),s("p",[s("strong",[e._v("标签:")]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#http-api"}},[s("em",[e._v("HTTP API")])]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#dashboard"}},[s("em",[e._v("Dashboard")])])],1),e._v(" "),s("p",[e._v("可以的。EMQX 提供的 HTTP API 中包含断开 MQTT 连接，该操作在 EMQX 2.x 和 3.0 的实现方式有所不同：")]),e._v(" "),s("ul",[s("li",[e._v("在 2.x 版本中是由 EMQX 自定义扩展协议实现的")]),e._v(" "),s("li",[e._v("在 3.0 版本之后按照 MQTT 5.0 协议对从服务器端断开连接的规范要求实现的")])]),e._v(" "),s("p",[e._v("调用的 API 如下所示：")]),e._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[e._v("HTTP 方法：DELETE\nURL：api/[v2|v3]/clients/{clientid}\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("\x3c!--请注意区分 URL 中第二部分的版本号，请根据使用的版本号来决定 --\x3e")]),e._v('\n\n返回内容：\n{\n    "code": 0,\n    "result": []\n}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br")])]),s("p",[e._v("HTTP API 使用方式参考 "),s("a",{attrs:{href:"https://docs.emqx.io/broker/v3/cn/rest.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("管理监控API (HTTP API)"),s("OutboundLink")],1)]),e._v(" "),s("h2",{attrs:{id:"emqx-能把接入的消息转发到-kafka-吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#emqx-能把接入的消息转发到-kafka-吗"}},[e._v("#")]),e._v(" EMQX 能把接入的消息转发到 Kafka 吗？")]),e._v(" "),s("p",[s("strong",[e._v("标签:")]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#kafka"}},[s("em",[e._v("Kafka")])]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#桥接"}},[s("em",[e._v("桥接")])]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#持久化"}},[s("em",[e._v("持久化")])])],1),e._v(" "),s("p",[e._v("能。目前 EMQX 企业版提供了内置的 Kafka 桥接方式，支持把消息桥接至 Kafka 进行流式处理。")]),e._v(" "),s("p",[e._v("EMQX 使用 Kafka 参照 "),s("a",{attrs:{href:"https://docs.emqx.io/tutorial/v3/cn/bridge/bridge_to_kafka.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("EMQX 到 Kafka 的桥接"),s("OutboundLink")],1)]),e._v(" "),s("h2",{attrs:{id:"emqx-企业版中桥接-kafka-一条-mqtt-消息到达-emqx-集群之后就回-mqtt-ack-报文还是写入-kafka-之后才回-mqtt-ack-报文"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#emqx-企业版中桥接-kafka-一条-mqtt-消息到达-emqx-集群之后就回-mqtt-ack-报文还是写入-kafka-之后才回-mqtt-ack-报文"}},[e._v("#")]),e._v(" EMQX 企业版中桥接 Kafka，一条 MQTT 消息到达 EMQX 集群之后就回 MQTT Ack 报文还是写入 Kafka 之后才回 MQTT Ack 报文?")]),e._v(" "),s("p",[s("strong",[e._v("标签:")]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#kafka"}},[s("em",[e._v("Kafka")])]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#配置"}},[s("em",[e._v("配置")])])],1),e._v(" "),s("p",[e._v("取决于 Kafka 桥接的配置，配置文件位于"),s("code",[e._v("/etc/emqx/plugins/emqx_bridge_kafka.conf")])]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("## Pick a partition producer and sync/async.")]),e._v("\nbridge.kafka.produce "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("sync")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("ul",[s("li",[e._v("同步：EMQX 在收到 Kafka 返回的 Ack 之后才会给前端返回 MQTT Ack 报文")]),e._v(" "),s("li",[e._v("异步：MQTT 消息到达 EMQX 集群之后就回 MQTT Ack 报文，而不会等待 Kafka 返回给 EMQX 的 Ack")])]),e._v(" "),s("p",[e._v("如果运行期间，后端的 Kafka 服务不可用，则消息会被累积在 EMQX 服务器中，")]),e._v(" "),s("ul",[s("li",[e._v("EMQX 2.4.3 之前的版本会将未发送至 Kafka 的消息在内存中进行缓存，直至内存使用完毕，并且会导致 EMQX 服务不可用。")]),e._v(" "),s("li",[e._v("EMQX 2.4.3 版本开始会将未发送至 Kafka 的消息在磁盘中进行缓存，如果磁盘用完可能会导致数据丢失。")])]),e._v(" "),s("p",[e._v("因此建议做好 Kafka 服务的监控，在发现 Kafka 服务有异常情况的时候尽快恢复 Kafka 服务。")]),e._v(" "),s("h2",{attrs:{id:"emqx-支持集群自动发现吗-有哪些实现方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#emqx-支持集群自动发现吗-有哪些实现方式"}},[e._v("#")]),e._v(" EMQX 支持集群自动发现吗？有哪些实现方式？")]),e._v(" "),s("p",[s("strong",[e._v("标签:")]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#集群"}},[s("em",[e._v("集群")])])],1),e._v(" "),s("p",[e._v("EMQX 支持集群自动发现。集群可以通过手动配置或自动配置的方式实现。")]),e._v(" "),s("p",[e._v("目前支持的自动发现方式有：")]),e._v(" "),s("ul",[s("li",[e._v("手动集群")]),e._v(" "),s("li",[e._v("静态集群")]),e._v(" "),s("li",[e._v("IP Multi-cast 自动集群")]),e._v(" "),s("li",[e._v("DNS 自动集群")]),e._v(" "),s("li",[e._v("ETCD 自动集群")]),e._v(" "),s("li",[e._v("K8S 自动集群")])]),e._v(" "),s("p",[e._v("有关集群概念和组建集群方式请参照 "),s("a",{attrs:{href:"https://docs.emqx.io/tutorial/v3/cn/cluster/whats_cluster.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("EMQX 的集群概念"),s("OutboundLink")],1)]),e._v(" "),s("h2",{attrs:{id:"我可以把-mqtt-消息从-emqx-转发其他消息中间件吗-例如-rabbitmq"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我可以把-mqtt-消息从-emqx-转发其他消息中间件吗-例如-rabbitmq"}},[e._v("#")]),e._v(" 我可以把 MQTT 消息从 EMQX 转发其他消息中间件吗？例如 RabbitMQ？")]),e._v(" "),s("p",[s("strong",[e._v("标签:")]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#rabbitmq"}},[s("em",[e._v("RabbitMQ")])]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#桥接"}},[s("em",[e._v("桥接")])]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#持久化"}},[s("em",[e._v("持久化")])])],1),e._v(" "),s("p",[e._v("EMQX 支持转发消息到其他消息中间件，通过 EMQX 提供的桥接方式就可以做基于主题级别的配置，从而实现主题级别的消息转发。")]),e._v(" "),s("p",[e._v("EMQX 桥接相关的使用方式请参照 "),s("a",{attrs:{href:"https://docs.emqx.io/tutorial/v3/cn/bridge/bridge.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("EMQX 桥接"),s("OutboundLink")],1)]),e._v(" "),s("h2",{attrs:{id:"我可以把消息从-emqx-转到公有云-mqtt-服务上吗-比如-aws-或者-azure-的-iot-hub"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我可以把消息从-emqx-转到公有云-mqtt-服务上吗-比如-aws-或者-azure-的-iot-hub"}},[e._v("#")]),e._v(" 我可以把消息从 EMQX 转到公有云 MQTT 服务上吗？比如 AWS 或者 Azure 的 IoT Hub？")]),e._v(" "),s("p",[s("strong",[e._v("标签:")]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#桥接"}},[s("em",[e._v("桥接")])])],1),e._v(" "),s("p",[e._v("EMQX 可以转发消息到标准 MQTT Broker，包括其他 MQTT 实现、公有云的 IoT Hub，通过 EMQX 提供的桥接就可以实现。")]),e._v(" "),s("h2",{attrs:{id:"mqtt-broker-比如-mosquitto-可以转发消息到-emqx-吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mqtt-broker-比如-mosquitto-可以转发消息到-emqx-吗"}},[e._v("#")]),e._v(" MQTT Broker（比如 Mosquitto）可以转发消息到 EMQX 吗？")]),e._v(" "),s("p",[s("strong",[e._v("标签:")]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#mosquitto"}},[s("em",[e._v("Mosquitto")])]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#桥接"}},[s("em",[e._v("桥接")])])],1),e._v(" "),s("p",[e._v("Mosquitto 可以配置转发消息到 EMQX，请参考"),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/rule/bridge_emqx.html"}},[e._v("数据桥接")]),e._v("。")],1),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("提示")]),e._v(" "),s("blockquote",[s("p",[e._v("EMQX 桥接相关的使用方式请参照 "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/rule/bridge_emqx.html"}},[e._v("EMQX 桥接")])],1)])]),e._v(" "),s("h2",{attrs:{id:"我想跟踪特定消息的发布和订阅过程-应该如何做"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我想跟踪特定消息的发布和订阅过程-应该如何做"}},[e._v("#")]),e._v(" 我想跟踪特定消息的发布和订阅过程，应该如何做？")]),e._v(" "),s("p",[s("strong",[e._v("标签:")]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#trace"}},[s("em",[e._v("Trace")])]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#调试"}},[s("em",[e._v("调试")])])],1),e._v(" "),s("p",[e._v("EMQX 支持追踪来自某个客户端的报文或者发布到某个主题的报文。追踪消息的发布和订阅需要使用命令行工具（emqx_ctl）的 trace 命令，下面给出一个追踪‘topic’主题的消息并保存在 "),s("code",[e._v("trace_topic.log")]),e._v(" 中的例子。更详细的说明请参阅 EMQX 文档的相关章节。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('./bin/emqx_ctl trace topic "topic" "trace_topic.log"\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h2",{attrs:{id:"为什么我做压力测试的时候-连接数目和吞吐量老是上不去-有系统调优指南吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么我做压力测试的时候-连接数目和吞吐量老是上不去-有系统调优指南吗"}},[e._v("#")]),e._v(" 为什么我做压力测试的时候，连接数目和吞吐量老是上不去，有系统调优指南吗？")]),e._v(" "),s("p",[s("strong",[e._v("标签:")]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#调试"}},[s("em",[e._v("调试")])]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#性能测试"}},[s("em",[e._v("性能测试")])])],1),e._v(" "),s("p",[e._v("在做压力测试的时候，除了要选用有足够计算能力的硬件，也需要对软件运行环境做一定的调优。比如修改修改操作系统的全局最大文件句柄数，允许用户打开的文件句柄数，TCP 的 backlog 和 buffer，Erlang 虚拟机的进程数限制等等。甚至包括需要在客户端上做一定的调优以保证客户端可以有足够的连接资源。")]),e._v(" "),s("p",[e._v("系统的调优在不同的需求下有不同的方式，在 EMQX 的"),s("a",{attrs:{href:"https://developer.emqx.io/docs/broker/v3/cn/tune.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("文档-测试调优"),s("OutboundLink")],1),e._v(" 中对用于普通场景的调优有较详细的说明")]),e._v(" "),s("h2",{attrs:{id:"emqx-支持加密连接吗-推荐的部署方案是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#emqx-支持加密连接吗-推荐的部署方案是什么"}},[e._v("#")]),e._v(" EMQX 支持加密连接吗？推荐的部署方案是什么？")]),e._v(" "),s("p",[s("strong",[e._v("标签:")]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#tls"}},[s("em",[e._v("TLS")])]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#加密连接"}},[s("em",[e._v("加密连接")])])],1),e._v(" "),s("p",[e._v("EMQX 支持加密连接。在生产环境部署时，推荐的方案是使用负载均衡终结 TLS。通过该方式，设备端和服务器端（负载均衡）的采用加密的连接，而负载均衡和后端的 EMQX 节点采用一般的 TCP 连接。")]),e._v(" "),s("h2",{attrs:{id:"emqx-安装之后无法启动怎么排查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#emqx-安装之后无法启动怎么排查"}},[e._v("#")]),e._v(" EMQX 安装之后无法启动怎么排查？")]),e._v(" "),s("p",[s("strong",[e._v("标签:")]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#调试"}},[s("em",[e._v("调试")])])],1),e._v(" "),s("p",[e._v("执行 "),s("code",[e._v("$ emqx console")]),e._v(" ，查看输出内容")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("logger")]),e._v(" 命令缺失")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('$ emqx console\nExec: /usr/lib/emqx/erts-10.3.5.1/bin/erlexec -boot /usr/lib/emqx/releases/v3.2.1/emqx -mode embedded -boot_var ERTS_LIB_DIR /usr/lib/emqx/erts-10.3.5.1/../lib -mnesia dir "/var/lib/emqx/mnesia/emqx@127.0.0.1" -config /var/lib/emqx/configs/app.2019.07.23.03.07.32.config -args_file /var/lib/emqx/configs/vm.2019.07.23.03.07.32.args -vm_args /var/lib/emqx/configs/vm.2019.07.23.03.07.32.args -- console\nRoot: /usr/lib/emqx\n/usr/lib/emqx\n/usr/bin/emqx: line 510: logger: command not found\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("p",[s("strong",[e._v("解决办法：")])]),e._v(" "),s("ul",[s("li",[s("p",[s("code",[e._v("Centos/Redhat")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ yum install rsyslog\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])])]),e._v(" "),s("li",[s("p",[s("code",[e._v("Ubuntu/Debian")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ apt-get install bsdutils\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])])]),e._v(" "),s("li",[s("p",[s("code",[e._v("openssl")]),e._v(" 缺失")])])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('    $ emqx console\n    Exec: /emqx/erts-10.3/bin/erlexec -boot /emqx/releases/v3.2.1/emqx -mode embedded -boot_var ERTS_LIB_DIR /emqx/erts-10.3/../lib -mnesia dir "/emqx/data/mnesia/emqx@127.0.0.1" -config /emqx/data/configs/app.2019.07.23.03.34.43.config -args_file /emqx/data/configs/vm.2019.07.23.03.34.43.args -vm_args /emqx/data/configs/vm.2019.07.23.03.34.43.args -- console\n    Root: /emqx\n    /emqx\n    Erlang/OTP 21 [erts-10.3] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:32] [hipe]\n\n    {"Kernel pid terminated",application_controller,"{application_start_failure,kernel,{{shutdown,{failed_to_start_child,kernel_safe_sup,{on_load_function_failed,crypto}}},{kernel,start,[normal,[]]}}}"}\n    Kernel pid terminated (application_controller) ({application_start_failure,kernel,{{shutdown,{failed_to_start_child,kernel_safe_sup,{on_load_function_failed,crypto}}},{kernel,start,[normal,[]]}}})\n\n    Crash dump is being written to: log/crash.dump...done\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br")])]),s("p",[s("strong",[e._v("解决办法：")]),e._v("\n安装1.1.1以上版本的 "),s("code",[e._v("openssl")])]),e._v(" "),s("ul",[s("li",[s("code",[e._v("License")]),e._v(" 文件缺失")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('  $ emqx console\n  Exec: /usr/lib/emqx/erts-10.3.5.1/bin/erlexec -boot /usr/lib/emqx/releases/v3.2.1/emqx -mode embedded -boot_var ERTS_LIB_DIR /usr/lib/emqx/erts-10.3.5.1/../lib -mnesia dir "/var/lib/emqx/mnesia/emqx@127.0.0.1" -config /var/lib/emqx/configs/app.2019.07.23.05.52.46.config -args_file /var/lib/emqx/configs/vm.2019.07.23.05.52.46.args -vm_args /var/lib/emqx/configs/vm.2019.07.23.05.52.46.args -- console\n  Root: /usr/lib/emqx\n  /usr/lib/emqx\n  Erlang/OTP 21 [erts-10.3.5.1] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:32] [hipe]\n\n  Starting emqx on node emqx@127.0.0.1\n  Start http:management listener on 8080 successfully.\n  Start http:dashboard listener on 18083 successfully.\n  Start mqtt:tcp listener on 127.0.0.1:11883 successfully.\n  Start mqtt:tcp listener on 0.0.0.0:1883 successfully.\n  Start mqtt:ws listener on 0.0.0.0:8083 successfully.\n  Start mqtt:ssl listener on 0.0.0.0:8883 successfully.\n  Start mqtt:wss listener on 0.0.0.0:8084 successfully.\n  EMQX 3.2.1 is running now!\n  "The license certificate is expired!"\n  2019-07-23 05:52:51.355 [critical] The license certificate is expired!\n  2019-07-23 05:52:51.355 [critical] The license certificate is expired! System shutdown!\n  Stop mqtt:tcp listener on 127.0.0.1:11883 successfully.\n  Stop mqtt:tcp listener on 0.0.0.0:1883 successfully.\n  Stop mqtt:ws listener on 0.0.0.0:8083 successfully.\n  Stop mqtt:ssl listener on 0.0.0.0:8883 successfully.\n  Stop mqtt:wss listener on 0.0.0.0:8084 successfully.\n  [os_mon] memory supervisor port (memsup): Erlang has closed\n  [os_mon] cpu supervisor port (cpu_sup): Erlang has closed\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br")])]),s("p",[s("strong",[e._v("解决办法：")]),e._v("\n登陆"),s("a",{attrs:{href:"https://emqx.io",target:"_blank",rel:"noopener noreferrer"}},[e._v("emqx.io"),s("OutboundLink")],1),e._v("申请license或安装开源版的 EMQX Broker")]),e._v(" "),s("h2",{attrs:{id:"emqx中ssl-resumption-session的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#emqx中ssl-resumption-session的使用"}},[e._v("#")]),e._v(" EMQX中ssl resumption session的使用")]),e._v(" "),s("p",[s("strong",[e._v("标签:")]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#tls"}},[s("em",[e._v("TLS")])])],1),e._v(" "),s("p",[e._v("修改emqx.conf配置中的 reuse_sessions = on 并生效后。如果客户端与服务端通过 SSL 已经连接成功，当第二次遇到客户端连接时，会跳过 SSL 握手阶段，直接建立连接，节省连接时间，增加客户端连接速度。")]),e._v(" "),s("h2",{attrs:{id:"mqtt-客户端断开连接统计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mqtt-客户端断开连接统计"}},[e._v("#")]),e._v(" MQTT 客户端断开连接统计")]),e._v(" "),s("p",[s("strong",[e._v("标签:")]),e._v(" "),s("RouterLink",{attrs:{to:"/zh/enterprise/latest/faq/tags.html#指标"}},[s("em",[e._v("指标")])])],1),e._v(" "),s("p",[e._v("执行 "),s("code",[e._v("emqx_ctl listeners")]),e._v("，查看对应端口下的 "),s("code",[e._v("shutdown_count")]),e._v(" 统计。")]),e._v(" "),s("p",[e._v("客户端断开链接错误码列表：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("keepalive_timeout")]),e._v("：MQTT keepalive 超时")]),e._v(" "),s("li",[s("code",[e._v("closed")]),e._v("：TCP客户端断开连接（客户端发来的FIN，但没收到 MQTT DISCONNECT）")]),e._v(" "),s("li",[s("code",[e._v("normal")]),e._v("：MQTT客户端正常断开")]),e._v(" "),s("li",[s("code",[e._v("einval")]),e._v("：EMQX 想向客户端发送一条消息，但是Socket 已经断开")]),e._v(" "),s("li",[s("code",[e._v("function_clause")]),e._v("：MQTT 报文格式错误")]),e._v(" "),s("li",[s("code",[e._v("etimedout")]),e._v("：TCP 发送超时（没有收到TCP ACK 回应）")]),e._v(" "),s("li",[s("code",[e._v("proto_unexpected_c")]),e._v("：在已经有一条MQTT连接的情况下重复收到了MQTT连接请求")]),e._v(" "),s("li",[s("code",[e._v("idle_timeout")]),e._v("： TCP 连接建立 15s 之后，还没收到 connect 报文")])])])}),[],!1,null,null,null);t.default=r.exports}}]);