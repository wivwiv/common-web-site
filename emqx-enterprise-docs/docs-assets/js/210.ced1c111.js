(window.webpackJsonp=window.webpackJsonp||[]).push([[210],{1465:function(t,e,s){"use strict";s.r(e);var a=s(10),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"http-acl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-acl"}},[t._v("#")]),t._v(" HTTP ACL")]),t._v(" "),s("p",[t._v("An external self-built HTTP application authentication data source is used for HTTP authentication, and the authentication result is judged based on the data returned by the HTTP API, which can implement complex ACL verification logic.")]),t._v(" "),s("p",[t._v("Plugin:")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("emqx_auth_http\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("The emqx_auth_http plugin also includes authentication function, which can be disabled via comments.")])]),t._v(" "),s("p",[t._v("To enable HTTP ACL, the following needs to be configured in "),s("code",[t._v("etc/plugins/emqx_auth_http.conf")]),t._v(":")]),t._v(" "),s("h2",{attrs:{id:"acl-authentication-principle"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#acl-authentication-principle"}},[t._v("#")]),t._v(" ACL Authentication principle")]),t._v(" "),s("p",[t._v("EMQX Broker uses the current client related information as parameters in publish/subscribe events, initiates request permissions to user-defined authentication services, and processes ACL authentication requests through the returned HTTP statusCode .")]),t._v(" "),s("ul",[s("li",[t._v("Authorization denied: The API returns status codes other than 200")]),t._v(" "),s("li",[t._v("Authorization succeeded: API returns 200 status code")]),t._v(" "),s("li",[t._v("Authorization ignored: API returns 200 status code with the message body of ignore")])]),t._v(" "),s("h2",{attrs:{id:"http-request-information"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-request-information"}},[t._v("#")]),t._v(" HTTP Request Information")]),t._v(" "),s("p",[t._v("Basic request information, configure certificates, request headers, and retry rules of HTTP API.")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# etc/plugins/emqx_auth_http.conf")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Certificate information required to enable HTTPS")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## auth.http.ssl.cacertfile = etc/certs/ca.pem")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## auth.http.ssl.certfile = etc/certs/client-cert.pem")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## auth.http.ssl.keyfile = etc/certs/client-key.pem")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Request header setup")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## auth.http.header.Accept = */*")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Retry setup")]),t._v("\nauth.http.request.retry_times "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n\nauth.http.request.retry_interval "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 1s\n\nauth.http.request.retry_backoff "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br")])]),s("p",[t._v("When performing publish/subscribe authentication, EMQX Broker will use the current client information and initiate a user-configured ACL authorization query request to query the client's authorization data on the HTTP server.")]),t._v(" "),s("h2",{attrs:{id:"superuser-request"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#superuser-request"}},[t._v("#")]),t._v(" superuser Request")]),t._v(" "),s("p",[t._v("Check whether the client is a super user at first. If the client is a super user, the ACL query will be skipped.")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# etc/plugins/emqx_auth_http.conf")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Request address")]),t._v("\nauth.http.super_req "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" http://127.0.0.1:8991/mqtt/superuser\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## HTTP request method")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Value: post | get | put")]),t._v("\nauth.http.super_req.method "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" post\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Request parameter")]),t._v("\nauth.http.super_req.params "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("clientid")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("%c,username"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("%u\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("h2",{attrs:{id:"acl-authorization-query-request"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#acl-authorization-query-request"}},[t._v("#")]),t._v(" ACL authorization query request")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# etc/plugins/emqx_auth_http.conf")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Request address")]),t._v("\nauth.http.acl_req "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" http://127.0.0.1:8991/mqtt/acl\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## HTTP request method")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Value: post | get | put")]),t._v("\nauth.http.acl_req.method "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" get\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Request parameter")]),t._v("\nauth.http.acl_req.params "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("access")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("%A,username"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("%u,clientid"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("%c,ipaddr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("%a,topic"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("%t,mountpoint"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("%m\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("h2",{attrs:{id:"request-description"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#request-description"}},[t._v("#")]),t._v(" Request description")]),t._v(" "),s("p",[t._v("When the HTTP request method is GET, the request parameters will be passed in the form of a URL query string; POST and PUT requests will submit the request parameters in the form of a common form (content-type is x-www-form-urlencoded).")]),t._v(" "),s("p",[t._v("You can use the following placeholders in the authentication request, and EMQX Broker will be automatically populated with client information when requested:")]),t._v(" "),s("ul",[s("li",[t._v("%u:User name")]),t._v(" "),s("li",[t._v("%c:Client ID")]),t._v(" "),s("li",[t._v("%a:Client IP address")]),t._v(" "),s("li",[t._v("%r:Client Access Protocol")]),t._v(" "),s("li",[t._v("%P:Clear text password")]),t._v(" "),s("li",[t._v("%p:Client Port")]),t._v(" "),s("li",[t._v("%C:TLS certificate common name (the domain name or subdomain name of the certificate), valid only for TLS connections")]),t._v(" "),s("li",[t._v("%d:TLS certificate subject, valid only for TLS connections")])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARING")]),t._v(" "),s("p",[t._v("The POST and PUT methods are recommended. When using the GET method, the clear text password may be recorded with the URL in the server log during transmission.")])])])}),[],!1,null,null,null);e.default=n.exports}}]);