(window.webpackJsonp=window.webpackJsonp||[]).push([[227],{1487:function(e,a,t){"use strict";t.r(a);var s=t(10),n=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"config-and-data-backup-restore"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#config-and-data-backup-restore"}},[e._v("#")]),e._v(" Config and data backup & restore")]),e._v(" "),t("p",[e._v("EMQX is highly available when clustered, and most of the data in EMQX cluster is\nfully replicated to all nodes -- However, we should still plan for the worst.\nLet's discuss data backup and restore for disaster recovery.")]),e._v(" "),t("h2",{attrs:{id:"terminologies"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#terminologies"}},[e._v("#")]),e._v(" Terminologies")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Mnesia",target:"_blank",rel:"noopener noreferrer"}},[e._v("Mnesia"),t("OutboundLink")],1),e._v(": The name of the built-in database inside each EMQX node.\n"),t("RouterLink",{attrs:{to:"/en/enterprise/latest/advanced/data-import-and-export.html"}},[e._v("Data export import")]),e._v(": A command line tool to support data export & import using a JSON file as the transient drop.")],1),e._v(" "),t("h2",{attrs:{id:"files"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#files"}},[e._v("#")]),e._v(" Files")]),e._v(" "),t("h3",{attrs:{id:"config-files"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#config-files"}},[e._v("#")]),e._v(" Config files")]),e._v(" "),t("p",[e._v("When using morden provisioning tools for EMQX deployment, configuration changes\nare mostly managed by the tools, and even source controled in for example a git repo.")]),e._v(" "),t("p",[e._v("In case manual config changes are made to the config files, it's a good idea to have them backed up.")]),e._v(" "),t("p",[e._v("The config files are possibly located in below places, but it differ depending on installation")]),e._v(" "),t("ul",[t("li",[e._v("Default to "),t("code",[e._v("/etc/emqx")]),e._v(" when installed from RPM or DEB packages")]),e._v(" "),t("li",[e._v("Default to "),t("code",[e._v("/opt/emqx/etc")]),e._v(" shen running in docker container")]),e._v(" "),t("li",[e._v("In "),t("code",[e._v("/path/to/install/dir/etc")]),e._v(" when directly extracted from zip package.")])]),e._v(" "),t("h2",{attrs:{id:"mnesia-database"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mnesia-database"}},[e._v("#")]),e._v(" Mnesia Database")]),e._v(" "),t("p",[e._v("There are two approaches to create a backup of the Mnesia database.")]),e._v(" "),t("h3",{attrs:{id:"export-mnesia-data"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#export-mnesia-data"}},[e._v("#")]),e._v(" Export 'mnesia' data")]),e._v(" "),t("p",[e._v("The commands introduced in "),t("RouterLink",{attrs:{to:"/en/enterprise/latest/advanced/data-import-and-export.html"}},[e._v("Data import and export")]),e._v(",\ncan be used backup the database to a JSON file using the export command,\nand restore whth the import command.")],1),e._v(" "),t("p",[e._v("When recovering a EMQX cluster from the exported file, the new EMQX cluster\nshould be started with at empty state, and the import command should\nrepopulate the database for all nodes in the cluster.")]),e._v(" "),t("h3",{attrs:{id:"backup-mnesia-dir"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#backup-mnesia-dir"}},[e._v("#")]),e._v(" Backup 'mnesia' dir")]),e._v(" "),t("p",[e._v("In EMQX Mnesia database, tables are stored in the "),t("code",[e._v("mnesia")]),e._v(" sub directory in EMQX's "),t("code",[e._v("data")]),e._v(" directory.\nBacking up the database can be as simple as making a copy of all the files in the "),t("code",[e._v("mnesia")]),e._v(" directory.")]),e._v(" "),t("p",[e._v("The database schema (which is also stored in "),t("code",[e._v("mnesia")]),e._v(" directory) is unique per EMQX node, meaning\na backup can not be used to restore another node in the cluster.")]),e._v(" "),t("p",[e._v("Depending on installation and configuration, "),t("code",[e._v("data")]),e._v(" dir can be located in below possible paths.")]),e._v(" "),t("ul",[t("li",[e._v("Where the environment variable "),t("code",[e._v("EMQX_NODE__DATA_DIR")]),e._v(" points to")]),e._v(" "),t("li",[e._v("Where the "),t("code",[e._v("node.data_dir")]),e._v(" config key points to in "),t("code",[e._v("emqx.conf")])]),e._v(" "),t("li",[t("code",[e._v("/opt/emqx/data")]),e._v(" when running in docker (typically a mounted volume)")]),e._v(" "),t("li",[t("code",[e._v("<install-path>/data")]),e._v(" when installed from zip package extraction")]),e._v(" "),t("li",[t("code",[e._v("/var/lib/emqx/")]),e._v(" when installed from RPM or DEB packages")])]),e._v(" "),t("h2",{attrs:{id:"what-about-persisted-sessions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#what-about-persisted-sessions"}},[e._v("#")]),e._v(" What about Persisted Sessions ?")]),e._v(" "),t("p",[e._v("Prior to v5.0, EMQX nodes are rather stateless by themselves, in the sense that persistent\nsession states are delegated to external databases (EMQX Enterprise feature).")]),e._v(" "),t("p",[e._v("So, for persisted sessions, there is nothing to backup from where the EMQX nodes are running.")])])}),[],!1,null,null,null);a.default=n.exports}}]);