(window.webpackJsonp=window.webpackJsonp||[]).push([[295],{1638:function(s,t,e){"use strict";e.r(t);var a=e(10),r=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"_3rd-party-custom-codec-example-grpc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3rd-party-custom-codec-example-grpc"}},[s._v("#")]),s._v(" 3rd-Party Custom codec example - gRPC")]),s._v(" "),e("h2",{attrs:{id:"rule-requirements"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rule-requirements"}},[s._v("#")]),s._v(" Rule requirements")]),s._v(" "),e("p",[s._v("The device publishes an arbitrary message to verify that the self-deployed codec service is working normally.")]),s._v(" "),e("h2",{attrs:{id:"create-a-resource-parser-grpc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-a-resource-parser-grpc"}},[s._v("#")]),s._v(" Create a resource Parser gRPC")]),s._v(" "),e("p",[s._v("In the EMQX Dashboard 的 "),e("a",{attrs:{href:"http://127.0.0.1:18083/#/resources",target:"_blank",rel:"noopener noreferrer"}},[s._v("Resource 创建"),e("OutboundLink")],1),s._v(" interface of EMQX, create a Parser gRPC resource using the following parameters:")]),s._v(" "),e("ul",[e("li",[s._v("URL: http://127.0.0.1:50051")]),s._v(" "),e("li",[s._v("Resource ID: my_grpc_parser_resource")])]),s._v(" "),e("h2",{attrs:{id:"create-schema"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-schema"}},[s._v("#")]),s._v(" Create Schema")]),s._v(" "),e("p",[s._v("In the "),e("a",{attrs:{href:"http://127.0.0.1:18083/#/schemas/0?oper=create",target:"_blank",rel:"noopener noreferrer"}},[s._v("Dashboard"),e("OutboundLink")],1),s._v(" interface of EMQX, create a 3rd-Party Schema using the following parameters:")]),s._v(" "),e("ol",[e("li",[s._v("Name: my_grpc_parser")]),s._v(" "),e("li",[s._v("Codec Type: 3rd-party")]),s._v(" "),e("li",[s._v("Third Party Type: Resources")]),s._v(" "),e("li",[s._v("Resource: my_grpc_parser_resource (select the Parser gRPC resource we created just now)")])]),s._v(" "),e("p",[s._v("All other configurations remain default.")]),s._v(" "),e("h2",{attrs:{id:"creating-rules"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#creating-rules"}},[s._v("#")]),s._v(" Creating rules")]),s._v(" "),e("p",[e("strong",[s._v("Use the Schema you have just created to write the rule SQL statement:")])]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v("\n\n  schema_encode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'my_grpc_parser'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" payload"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" encode_resp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  schema_decode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'my_grpc_parser'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" encode_resp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" decode_resp\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"t/#"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[s._v("This SQL statement first encodes and then decodes the data to verify that the encoding and decoding process is correct:")]),s._v(" "),e("ul",[e("li",[s._v("The "),e("code",[s._v("schema_encode")]),s._v(" function encodes the contents of the payload field according to the Schema 'my_grpc_parser' and stores the result in the variable "),e("code",[s._v("encode_resp")]),s._v(";")]),s._v(" "),e("li",[s._v("The "),e("code",[s._v("schema_decode")]),s._v(" function decodes the contents of the payload field according to the Schema 'my_grpc_parser' and stores the result in the variable "),e("code",[s._v("decode_resp")]),s._v(";")])]),s._v(" "),e("p",[s._v("The final filtered result of this SQL statement is the variables "),e("code",[s._v("encode_resp")]),s._v(" and "),e("code",[s._v("decode_resp")]),s._v(".")]),s._v(" "),e("p",[e("strong",[s._v("Then add the action using the following parameters:")])]),s._v(" "),e("ul",[e("li",[s._v("Action Type: Check (debug)")])]),s._v(" "),e("p",[s._v("This check action prints the results filtered by the SQL statement to the emqx console (erlang shell).")]),s._v(" "),e("p",[s._v('If the service is started with emqx console, the print will be displayed directly in the console; if the service is started with emqx start, the print will be output to the erlang.log.N file in the log directory, where "N" is an integer, e.g. "erlang.log.1", " erlang.log.2".')]),s._v(" "),e("h2",{attrs:{id:"codec-server-side-code"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#codec-server-side-code"}},[s._v("#")]),s._v(" Codec server-side code")]),s._v(" "),e("p",[s._v("Once the rules have been created, it is time to simulate the data for testing. Therefore, the first thing you need to do is write your own codec service.")]),s._v(" "),e("p",[s._v("The following code implements an gRPC codec service using the Python language. For simplicity, this service just do base64_encode on received string when encoding, and do base64_decode\nwhen decoding.\nSee "),e("a",{attrs:{href:"https://github.com/terry-xiaoyu/emqx-schema-grpc-python-server",target:"_blank",rel:"noopener noreferrer"}},[s._v("full code"),e("OutboundLink")],1),s._v(" for details.")]),s._v(" "),e("div",{staticClass:"language-python line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Parser")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("emqx_schema_registry_pb2_grpc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ParserServicer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("HealthCheck")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" request\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("Parse")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"parser got encode request: "')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            encoded_d "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" base64"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("b64encode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" emqx_schema_registry_pb2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ParseResponse"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("code"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'SUCCESS'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" message"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ok"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                result"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("encoded_d"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"parser got decode request: "')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            decoded_d "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" base64"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("b64decode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" emqx_schema_registry_pb2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ParseResponse"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("code"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'SUCCESS'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" message"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ok"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                result"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("decoded_d"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("serve")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    server "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" grpc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("server"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("futures"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ThreadPoolExecutor"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("max_workers"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    emqx_schema_registry_pb2_grpc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("add_ParserServicer_to_server"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n        Parser"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" server"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    server"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("add_insecure_port"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[::]:50051'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    server"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("start"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    server"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("wait_for_termination"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" __name__ "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'__main__'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    logging"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("basicConfig"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    serve"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br")])]),e("p",[s._v("Run this service:")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("pip3 "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" grpcio\npip3 "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" grpcio-tools\npython3 -m grpc_tools.protoc -I./protos --python_out"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(". --grpc_python_out"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(". ./protos/emqx_schema_registry.proto\n\npython3 emqx_schema_registry_server.py\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h2",{attrs:{id:"checking-rule-execution-results"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#checking-rule-execution-results"}},[s._v("#")]),s._v(" Checking rule execution results")]),s._v(" "),e("p",[s._v("Since this example is relatively simple, we'll use the MQTT Websocket client directly to simulate sending a message on the device side.")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("In the Dashboard's "),e("a",{attrs:{href:"http://127.0.0.1:18083/#/websocket",target:"_blank",rel:"noopener noreferrer"}},[s._v("Websocket"),e("OutboundLink")],1),s._v(' tools, log in to an MQTT Client and publish a message to "t/1" with the text "hello".')])]),s._v(" "),e("li",[e("p",[s._v("Check what is printed in the emqx console (erlang shell):")])])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("emqx@127.0.0.1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("inspect"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n        Selected Data: "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#{<<"decode_resp">> =>')]),s._v("\n                             "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#{code => 'SUCCESS',message => <<\"ok\">>,")]),s._v("\n                               result "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(",\n                         "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"encode_resp"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n                             "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#{code => 'SUCCESS',message => <<\"ok\">>,")]),s._v("\n                               result "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aGVsbG8="')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        Envs: "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#{'__bindings__' =>")]),s._v("\n                    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#{'Id' => <<\"inspect_1649928007719256000\">>,")]),s._v("\n                      "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Params'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#{}},")]),s._v("\n                clientid "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mqttjs_4c8818ae"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(",event "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'message.publish'")]),s._v(",\n                flags "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#{dup => false,retain => false},")]),s._v("\n                headers "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n                    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#{peerhost => <<"127.0.0.1">>,properties => #{},')]),s._v("\n                      proto_ver "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(",protocol "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mqtt,username "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(",\n                "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0005DC99CDA113B6F44200000CEB0001"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(",\n                metadata "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#{rule_id => <<"rule:440083">>},')]),s._v("\n                node "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'emqx@127.0.0.1'")]),s._v(",payload "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(",\n                peerhost "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"127.0.0.1"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(",pub_props "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#{},")]),s._v("\n                publish_received_at "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1649928021545")]),s._v(",qos "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(",\n                timestamp "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1649928021545")]),s._v(",topic "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"t/1"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(",\n                username "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        Action Init Params: "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#{}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br")])]),e("p",[s._v("Select Data is the data filtered by the SQL statement, Envs are available environment variables within the rule engine and Action Init Params is the initialization parameters for actions. All three data are in "),e("code",[s._v("Map")]),s._v(" format.")]),s._v(" "),e("p",[s._v("The two fields "),e("code",[s._v("decode_resp")]),s._v(" and "),e("code",[s._v("encode_resp")]),s._v(" in Selected Data correspond to the two ASs in the SELECT statement.")]),s._v(" "),e("p",[s._v("Because "),e("code",[s._v("decode_resp")]),s._v(' is the result of encoding and then decoding, it is reverted to the content we sent, "hello", indicating that the codec plugin is working correctly.')])])}),[],!1,null,null,null);t.default=r.exports}}]);