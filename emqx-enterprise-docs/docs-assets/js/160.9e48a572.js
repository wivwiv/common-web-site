(window.webpackJsonp=window.webpackJsonp||[]).push([[160],{1484:function(e,s,a){"use strict";a.r(s);var t=a(10),r=Object(t.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"bridge"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bridge"}},[e._v("#")]),e._v(" Bridge")]),e._v(" "),t("p",[e._v("EMQX Broker supports two bridging methods:")]),e._v(" "),t("ul",[t("li",[e._v("-RPC bridging: A bridge method that uses Erlang RPC protocol, only available between EMQX Broker")]),e._v(" "),t("li",[e._v("MQTT Bridging: A bridge method that uses the MQTT protocol as a client to connect to a remote broker, and can bridge to other MQTT brokers and EMQX Broker")])]),e._v(" "),t("p",[e._v("The concept is shown in the following figure:")]),e._v(" "),t("p",[t("img",{attrs:{src:a(493),alt:"image"}})]),e._v(" "),t("p",[e._v("Publishers can publish messages to remote brokers via bridging:")]),e._v(" "),t("p",[t("img",{attrs:{src:a(494),alt:"image"}})]),e._v(" "),t("p",[e._v("EMQX Broker distinguishes different bridges based on different names. Bridge can be added in "),t("code",[e._v("etc/plugins/emqx_bridge_mqtt.conf")]),e._v(" :")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("bridge.mqtt.aws.address "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("211.182")]),e._v(".34.1:1883\n\nbridge.mqtt.huawei.address "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("54.33")]),e._v(".120.8:1883\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("p",[e._v("This configuration declares two bridges with the name of "),t("code",[e._v("aws")]),e._v(" and "),t("code",[e._v("huawei")]),e._v(", which respectively point to the responding service address using MQTT bridging method.")]),e._v(" "),t("p",[e._v("If the value of this configuration is the node name of another EMQX Broker, the RPC bridging method is used:")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("bridge.mqtt.emqx2.address "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" emqx2@57.122.76.34\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("To use the bridge function, you need to enable the emqx_bridge_mqtt plugin:")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("$ emqx_ctl plugins load emqx_bridge_mqtt\n\nok\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("h2",{attrs:{id:"advantages-and-disadvantages-of-rpc-bridging"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#advantages-and-disadvantages-of-rpc-bridging"}},[e._v("#")]),e._v(" Advantages and disadvantages of RPC bridging")]),e._v(" "),t("p",[e._v("The advantage of RPC bridging is that it does not involve the MQTT protocol codec and is more efficient than MQTT bridging.")]),e._v(" "),t("p",[e._v("The disadvantage of RPC bridging")]),e._v(" "),t("ul",[t("li",[e._v("RPC bridging can only bridge two EMQX Brokers together (the version must be the same), and cannot bridge EMQX Broker to other MQTT Brokers")]),e._v(" "),t("li",[e._v("RPC bridging can only forward local messages to remote bridge nodes, and cannot synchronize messages from remote bridge nodes to local nodes")])]),e._v(" "),t("h2",{attrs:{id:"rpc-bridging-example"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rpc-bridging-example"}},[e._v("#")]),e._v(" RPC bridging example")]),e._v(" "),t("p",[e._v("Suppose there are two emqx nodes:")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Name")]),e._v(" "),t("th",[e._v("Node")]),e._v(" "),t("th",[e._v("MQTT Port")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("emqx1")]),e._v(" "),t("td",[t("a",{attrs:{href:"mailto:emqx1@192.168.1.1"}},[e._v("emqx1@192.168.1.1")])]),e._v(" "),t("td",[e._v("1883")])]),e._v(" "),t("tr",[t("td",[e._v("emqx2")]),e._v(" "),t("td",[t("a",{attrs:{href:"mailto:emqx2@192.168.1.2"}},[e._v("emqx2@192.168.1.2")])]),e._v(" "),t("td",[e._v("1883")])])])]),e._v(" "),t("p",[e._v("Now, we are going to bridge "),t("code",[e._v("emqx1")]),e._v(" to "),t("code",[e._v("emqx2")]),e._v(". First we need to add the Bridge configuration in the  configuration file "),t("code",[e._v("etc/plugins/emqx_bridge_mqtt.conf")]),e._v("  of emqx1 and point to emqx2:")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("bridge.mqtt.emqx2.address "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" emqx2@192.168.1.2\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Next, we will define the "),t("code",[e._v("forwards")]),e._v(" rule, so that messages sent by this node to "),t("code",[e._v("sensor1 / #")]),e._v("and"),t("code",[e._v("sensor2 / #")]),e._v(" will be forwarded to "),t("code",[e._v("emqx2")]),e._v(":")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("bridge.mqtt.emqx2.forwards "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" sensor1/"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#,sensor2/#")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("If you want to add specific prefix to the topics before forwarding the message to "),t("code",[e._v("emqx2")]),e._v(" , you can set the mount point:")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("bridge.mqtt.emqx2.mountpoint "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" bridge/emqx2/"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${node}")]),e._v("/\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("The mount point is good for "),t("code",[e._v("emqx2")]),e._v(" to distinguish between bridged messages and local messages. For example, in the above configuration, the message with the original topic of "),t("code",[e._v("sensor1/hello")]),e._v(" that will change into  "),t("code",[e._v("bridge/emqx2/emqx1@192.168.1.1/sensor1/hello")]),e._v(" after being forwarded to "),t("code",[e._v("emqx2")]),e._v(".")]),e._v(" "),t("h2",{attrs:{id:"mqtt-bridging-example"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mqtt-bridging-example"}},[e._v("#")]),e._v(" MQTT bridging example")]),e._v(" "),t("p",[e._v("For MQTT bridging, it makes EMQX Broker connect as a MQTT client to a remote MQTT broker.")]),e._v(" "),t("p",[e._v("First you need to configure the MQTT client parameters:")]),e._v(" "),t("p",[e._v("Remote Broker Address:")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("bridge.mqtt.aws.address "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("211.182")]),e._v(".34.1:1883\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("MQTT protocol version, which can be one of  "),t("code",[e._v("mqttv3")]),e._v(", "),t("code",[e._v("mqttv4")]),e._v("  or  "),t("code",[e._v("mqttv5")]),e._v(":")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("bridge.mqtt.aws.proto_ver "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" mqttv4\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("The clientid of the MQTT client:")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("bridge.mqtt.aws.clientid "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" bridge_emq\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("The username field of the MQTT client:")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("bridge.mqtt.aws.username "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" user\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("The password field of the MQTT client:")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("bridge.mqtt.aws.password "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("passwd")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Keepalive configuration:")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("bridge.mqtt.aws.keepalive "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" 60s\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("The client's clean_start field. Some IoT Hubs require that the clean_start (or clean_session) field must be "),t("code",[e._v("true")]),e._v(":")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("bridge.mqtt.aws.clean_start "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("The reconnection interval can be set:")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("bridge.mqtt.aws.reconnect_interval "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" 30s\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("If TLS connection is used, you can set "),t("code",[e._v("bridge.mqtt.aws.ssl = on")]),e._v(" and set the TLS certificate:")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("bridge.mqtt.aws.ssl "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" off\nbridge.mqtt.aws.cacertfile "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" etc/certs/cacert.pem\nbridge.mqtt.aws.certfile "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" etc/certs/client-cert.pem\nbridge.mqtt.aws.keyfile "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" etc/certs/client-key.pem\nbridge.mqtt.aws.ciphers "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" ECDHE-ECDSA-AES256-GCM-SHA384,ECDHE-RSA-AES256-GCM-SHA384\nbridge.mqtt.aws.tls_versions "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" tlsv1.2,tlsv1.1,tlsv1\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("p",[e._v("Next, we define the "),t("code",[e._v("forwards")]),e._v(" rule, so that messages sent by this node to "),t("code",[e._v("sensor1/#")]),e._v("and "),t("code",[e._v("sensor2/#")]),e._v("will be forwarded to the remote broker:")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("bridge.mqtt.aws.forwards "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" sensor1/"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#,sensor2/#")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("You can also specify the retry interval for QoS1 and QoS2 messages and the number of packet sent in bulk:")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("bridge.mqtt.aws.retry_interval "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" 20s\nbridge.mqtt.aws.max_inflight_batches "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("32")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("If you want to add a specific prefix to the topic forwarding the message to "),t("code",[e._v("aws")]),e._v(" , you can set the mount point. For details, see the  "),t("a",{attrs:{href:"#rpc-bridge-example"}},[e._v("RPC Bridge Example")]),e._v(" section:")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("bridge.mqtt.aws.mountpoint "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" bridge/aws/"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${node}")]),e._v("/\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v('If you want your local broker to "pull" messages from remote brokers, you can subscribe to certain topics from remote brokers:')]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("bridge.mqtt.aws.subscription.1.topic "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" cmd/topic1\nbridge.mqtt.aws.subscription.1.qos "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("h3",{attrs:{id:"emqx-broker-s-bridge-cache-configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#emqx-broker-s-bridge-cache-configuration"}},[e._v("#")]),e._v(" EMQX Broker's bridge cache configuration")]),e._v(" "),t("p",[e._v("EMQX Broker's Bridge has a message cache mechanism. When the Bridge is disconnected, the message of the forwards topic is cached. When the bridge is restored, the message is re-forwarded to the remote node. The caching mechanism applies to both RPC and MQTT bridges.")]),e._v(" "),t("p",[e._v("Set the total cache queue size:")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("bridge.mqtt.aws.queue.max_total_size "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" 5GB\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Cache messages to a certain path to the disk (Only cache to memory if not set):")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("bridge.mqtt.emqx2.queue.replayq_dir "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" data/emqx_emqx2_bridge/\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Set the size of a single cache file. If it exceeds, a new file will be created to store the message queue:")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("bridge.mqtt.emqx2.queue.replayq_seg_bytes "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" 10MB\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])])}),[],!1,null,null,null);s.default=r.exports},493:function(e,s,a){e.exports=a.p+"docs-assets/img/bridge.7dd285a2.png"},494:function(e,s,a){e.exports=a.p+"docs-assets/img/bridges_3.51f9d637.png"}}]);