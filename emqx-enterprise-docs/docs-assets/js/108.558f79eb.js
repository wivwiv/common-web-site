(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{1028:function(s,e,n){s.exports=n.p+"docs-assets/img/exhook-add.e98a191e.jpg"},1029:function(s,e,n){s.exports=n.p+"docs-assets/img/exhook-conf.8aa97152.jpg"},1030:function(s,e,n){s.exports=n.p+"docs-assets/img/exhook-succ.f4aa1485.jpg"},1762:function(s,e,n){"use strict";n.r(e);var t=n(10),r=Object(t.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"多语言扩展-钩子"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多语言扩展-钩子"}},[s._v("#")]),s._v(" 多语言扩展 - 钩子")]),s._v(" "),t("p",[s._v("在 EMQX e4.2.0 中，我们提供了多语言扩展的支持。其中 "),t("strong",[s._v("多语言扩展钩子")]),s._v(" 模块允许使用其他编程语言（例如：Python，Java 等）直接向 EMQX 系统挂载钩子，以接收并处理 EMQX 系统的钩子事件，达到扩展和定制 EMQX 的目的。例如，用户可以使用其他编程语言来自定义：")]),s._v(" "),t("ul",[t("li",[s._v("客户端接入的认证授权")]),s._v(" "),t("li",[s._v("发布/订阅的 ACL 鉴权")]),s._v(" "),t("li",[s._v("消息的持久化，桥接")]),s._v(" "),t("li",[s._v("发布/订阅，或者客户端上下线事件的通知处理")])]),s._v(" "),t("h2",{attrs:{id:"设计"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设计"}},[s._v("#")]),s._v(" 设计")]),s._v(" "),t("p",[t("strong",[s._v("多语言扩展钩子")]),s._v("  功能由 "),t("code",[s._v("emqx-exhook")]),s._v(" 插件提供。它使用 "),t("a",{attrs:{href:"https://www.grpc.io",target:"_blank",rel:"noopener noreferrer"}},[s._v("gRPC"),t("OutboundLink")],1),s._v(" 作为 RPC 的通信框架。")]),s._v(" "),t("p",[s._v("架构如下图：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("  EMQX\n+========================+                 +========+==========+\n|    ExHook              |                 |        |          |\n|   +----------------+   |      gRPC       | gRPC   |  User's  |\n|   |   gRPC Client  | ------------------\x3e | Server |  Codes   |\n|   +----------------+   |    (HTTP/2)     |        |          |\n|                        |                 |        |          |\n+========================+                 +========+==========+\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("它表明：EMQX 中的 ExHook 模块作为一个 gRPC 客户端，将系统中所有的钩子事件发送到用户的 gRPC 服务端。")]),s._v(" "),t("p",[s._v("和 EMQX 原生的钩子一致，它也支持链式的方式计算和返回：")]),s._v(" "),t("p",[t("img",{attrs:{src:n(398),alt:"chain_of_responsiblity"}})]),s._v(" "),t("h2",{attrs:{id:"接口设计"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#接口设计"}},[s._v("#")]),s._v(" 接口设计")]),s._v(" "),t("p",[s._v("作为事件的处理端，即 gRPC 的服务端。它需要用户自定义实现需要挂载的钩子列表，和每个钩子事件到达后如何去处理的回调函数。这些接口在 "),t("strong",[s._v("多语言扩展钩子")]),s._v(" 中被定义为一个名为 "),t("code",[s._v("HookProvider")]),s._v("的 gRPC 服务，其需要实现的接口的列表包含：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('syntax = "proto3";\n\npackage emqx.exhook.v1;\n\nservice HookProvider {\n\n  rpc OnProviderLoaded(ProviderLoadedRequest) returns (LoadedResponse) {};\n\n  rpc OnProviderUnloaded(ProviderUnloadedRequest) returns (EmptySuccess) {};\n\n  rpc OnClientConnect(ClientConnectRequest) returns (EmptySuccess) {};\n\n  rpc OnClientConnack(ClientConnackRequest) returns (EmptySuccess) {};\n\n  rpc OnClientConnected(ClientConnectedRequest) returns (EmptySuccess) {};\n\n  rpc OnClientDisconnected(ClientDisconnectedRequest) returns (EmptySuccess) {};\n\n  rpc OnClientAuthenticate(ClientAuthenticateRequest) returns (ValuedResponse) {};\n\n  rpc OnClientCheckAcl(ClientCheckAclRequest) returns (ValuedResponse) {};\n\n  rpc OnClientSubscribe(ClientSubscribeRequest) returns (EmptySuccess) {};\n\n  rpc OnClientUnsubscribe(ClientUnsubscribeRequest) returns (EmptySuccess) {};\n\n  rpc OnSessionCreated(SessionCreatedRequest) returns (EmptySuccess) {};\n\n  rpc OnSessionSubscribed(SessionSubscribedRequest) returns (EmptySuccess) {};\n\n  rpc OnSessionUnsubscribed(SessionUnsubscribedRequest) returns (EmptySuccess) {};\n\n  rpc OnSessionResumed(SessionResumedRequest) returns (EmptySuccess) {};\n\n  rpc OnSessionDiscarded(SessionDiscardedRequest) returns (EmptySuccess) {};\n\n  rpc OnSessionTakeovered(SessionTakeoveredRequest) returns (EmptySuccess) {};\n\n  rpc OnSessionTerminated(SessionTerminatedRequest) returns (EmptySuccess) {};\n\n  rpc OnMessagePublish(MessagePublishRequest) returns (ValuedResponse) {};\n\n  rpc OnMessageDelivered(MessageDeliveredRequest) returns (EmptySuccess) {};\n\n  rpc OnMessageDropped(MessageDroppedRequest) returns (EmptySuccess) {};\n\n  rpc OnMessageAcked(MessageAckedRequest) returns (EmptySuccess) {};\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br")])]),t("p",[s._v("其中 HookProvider 部分：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("OnProviderLoaded")]),s._v("：定义 HookProvider 如何被加载，返回需要挂载的钩子列表。仅在该列表中的钩子会被回调到 HookProivder 服务。")]),s._v(" "),t("li",[t("code",[s._v("OnProviderUnloaded")]),s._v("：定义 HookProvider 如何被卸载，仅用作通知。")])]),s._v(" "),t("p",[s._v("钩子事件部分：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("OnClient*")]),s._v("，"),t("code",[s._v("OnSession*")]),s._v("，"),t("code",[s._v("OnMessage*")]),s._v(" 为前缀的方法与 "),t("RouterLink",{attrs:{to:"/zh/enterprise/latest/advanced/hooks.html"}},[s._v("钩子")]),s._v(" 的当中的方法一一对应。它们有着相同的调用时机和相似的参数列表。")],1),s._v(" "),t("li",[s._v("仅 "),t("code",[s._v("OnClientAuthenticate")]),s._v("，"),t("code",[s._v("OnClientCheckAcl")]),s._v("，"),t("code",[s._v("OnMessagePublish")]),s._v(" 允许携带返回值到 EMQX 系统，其它回调则不支持。")])]),s._v(" "),t("p",[s._v("其中接口和参数数据结构的详情参考："),t("a",{attrs:{href:"https://github.com/emqx/emqx/blob/master/apps/emqx_exhook/priv/protos/exhook.proto",target:"_blank",rel:"noopener noreferrer"}},[s._v("exhook.proto"),t("OutboundLink")],1)]),s._v(" "),t("h2",{attrs:{id:"开发指南"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开发指南"}},[s._v("#")]),s._v(" 开发指南")]),s._v(" "),t("p",[s._v("用户在使用多语言扩展钩子的功能时，需要先实现 "),t("code",[s._v("HookProvider")]),s._v(" 的 gRPC 服务来接收 ExHook 发送出来的回调事件。")]),s._v(" "),t("p",[s._v("其步骤如下：")]),s._v(" "),t("ol",[t("li",[s._v("拷贝出当前版本的 "),t("code",[s._v("lib/emqx_exhook-<x.y.z>/priv/protos/exhook.proto")]),s._v(" 文件。")]),s._v(" "),t("li",[s._v("使用对应编程语言的 gRPC 框架，生成 "),t("code",[s._v("exhook.proto")]),s._v(" 的 gRPC 服务端的代码。")]),s._v(" "),t("li",[s._v("按需实现 exhook.proto 当中定义的接口。")])]),s._v(" "),t("p",[s._v("开发完成后，需将该服务部署到与 EMQX 能够通信的服务器上，并保证端口的开放。")]),s._v(" "),t("p",[s._v("其中各个语言的 gRPC 框架可参考："),t("a",{attrs:{href:"https://github.com/grpc-ecosystem/awesome-grpc",target:"_blank",rel:"noopener noreferrer"}},[s._v("grpc-ecosystem/awesome-grpc"),t("OutboundLink")],1)]),s._v(" "),t("h2",{attrs:{id:"创建模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建模块"}},[s._v("#")]),s._v(" 创建模块")]),s._v(" "),t("p",[s._v("在成功部署 "),t("code",[s._v("HookProvider")]),s._v(" 服务后，通过 dashboard 页面可以开启多语言钩子扩展模块，并配置其服务地址即可正常使用。")]),s._v(" "),t("p",[s._v("打开 "),t("a",{attrs:{href:"http://127.0.0.1:18083/#/modules",target:"_blank",rel:"noopener noreferrer"}},[s._v("EMQX Dashboard"),t("OutboundLink")],1),s._v("，点击左侧的 “模块” 选项卡，选择添加：")]),s._v(" "),t("p",[t("img",{attrs:{src:n(390),alt:"Modules"}})]),s._v(" "),t("p",[s._v("选择 “多语言扩展钩子”：")]),s._v(" "),t("p",[t("img",{attrs:{src:n(1028),alt:"Add ExHook Module"}})]),s._v(" "),t("p",[s._v("配置 "),t("code",[s._v("HookProvider")]),s._v(" 服务相关参数：")]),s._v(" "),t("p",[t("img",{attrs:{src:n(1029),alt:"Configure ExHook gRPC Server"}})]),s._v(" "),t("p",[s._v("点击添加后，模块添加完成")]),s._v(" "),t("p",[t("img",{attrs:{src:n(1030),alt:"Add ExHook Successfully"}})]),s._v(" "),t("p",[s._v("至此，多语言扩展钩子的配置已经完成。")])])}),[],!1,null,null,null);e.default=r.exports},390:function(s,e,n){s.exports=n.p+"docs-assets/img/modules.89e07c9c.png"},398:function(s,e,n){s.exports=n.p+"docs-assets/img/chain_of_responsiblity.863497e8.png"}}]);