(window.webpackJsonp=window.webpackJsonp||[]).push([[218],{1474:function(t,e,a){"use strict";a.r(e);var s=a(10),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"http"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[t._v("#")]),t._v(" HTTP")]),t._v(" "),a("p",[t._v("HTTP authentication uses an external self-built HTTP application authentication data source, and determines the authentication result based on the data returned by the HTTP API, which can implement complex authentication logic.")]),t._v(" "),a("p",[t._v("Plugin:")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("emqx_auth_http\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("The emqx_auth_http plugin also includes ACL feature, which can be disabled via comments.")])]),t._v(" "),a("h2",{attrs:{id:"authentication-principle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#authentication-principle"}},[t._v("#")]),t._v(" Authentication principle")]),t._v(" "),a("p",[t._v("EMQX Broker uses the current client related information as a parameter in the device connection event, initiates a request query permission to the user-defined authentication service, and processes the authentication request through the returned HTTP "),a("strong",[t._v("statusCode")]),t._v(".")]),t._v(" "),a("ul",[a("li",[t._v("Authentication failed: API returns status code of 4xx")]),t._v(" "),a("li",[t._v("Authentication succeeded: API returns status code of 200")]),t._v(" "),a("li",[t._v("Authentication ignored : API returns status code of 200 with message body of ignore")])]),t._v(" "),a("h2",{attrs:{id:"salting-rules-and-hash-methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#salting-rules-and-hash-methods"}},[t._v("#")]),t._v(" Salting rules and hash methods")]),t._v(" "),a("p",[t._v("HTTP passes a clear text password in the request. The salting rules and hash method depend on the HTTP application.")]),t._v(" "),a("h2",{attrs:{id:"authentication-request"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#authentication-request"}},[t._v("#")]),t._v(" Authentication request")]),t._v(" "),a("p",[t._v("During authentication, EMQX Broker will use the current client information to populate and initiate a user-configured authentication query request to query the client's authentication data on the HTTP server.")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# etc/plugins/emqx_auth_http.conf")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Request address")]),t._v("\nauth.http.auth_req.url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" http://127.0.0.1:80/mqtt/auth\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## HTTP request method")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Value: post | get | put")]),t._v("\nauth.http.auth_req.method "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" post\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## HTTP Request Headers for Auth Request, Content-Type header is configured by default.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## The possible values of the Content-Type header: application/x-www-form-urlencoded, application/json")]),t._v("\nauth.http.auth_req.headers.content-type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" application/x-www-form-urlencoded\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Request parameter")]),t._v("\nauth.http.auth_req.params "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("clientid")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("%c,username"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("%u,password"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("%P\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])]),a("p",[t._v("When the HTTP request method is GET, the request parameters will be passed in the form of a URL query string; Under POST and PUT requests, it will submit the request parameters in the form of Json or ordinary form (determined by the value of content-type).")]),t._v(" "),a("p",[t._v("You can use the following placeholders in the authentication request, and EMQX Broker will be automatically populated with client information when requested:")]),t._v(" "),a("ul",[a("li",[t._v("%u：Username")]),t._v(" "),a("li",[t._v("%c：Client ID")]),t._v(" "),a("li",[t._v("%a：Client IP address")]),t._v(" "),a("li",[t._v("%r：Client Access Protocol")]),t._v(" "),a("li",[t._v("%P：Clear text password")]),t._v(" "),a("li",[t._v("%p：Client port")]),t._v(" "),a("li",[t._v("%C：TLS certificate common name (the domain name or subdomain name of the certificate), valid only for TLS connections")]),t._v(" "),a("li",[t._v("%d：TLS certificate subject, valid only for TLS connections")])]),t._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[t._v("DANGER")]),t._v(" "),a("p",[t._v("The POST and PUT methods are recommended. When using the GET method, the clear text password may be recorded with the URL in the server log during transmission.")])])])}),[],!1,null,null,null);e.default=n.exports}}]);