(window.webpackJsonp=window.webpackJsonp||[]).push([[351],{1717:function(t,r,e){"use strict";e.r(r);var a=e(10),_=Object(a.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"消息桥接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#消息桥接"}},[t._v("#")]),t._v(" 消息桥接")]),t._v(" "),e("p",[t._v("EMQX 企业版桥接转发 MQTT 消息到 Kafka、RabbitMQ、Pulsar、RocketMQ、MQTT Broker 或其他 EMQX 节点。")]),t._v(" "),e("p",[t._v("桥接是一种连接多个 EMQX 或者其他 MQTT 消息中间件的方式。不同于集群，工作在桥接模式下的节点之间不会复制主题树和路由表。桥接模式所做的是：")]),t._v(" "),e("p",[t._v("按照规则把消息转发至桥接节点；\n从桥接节点订阅主题，并在收到消息后在本节点/集群中转发该消息。")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("              ---------                     ---------                     ---------\nPublisher --"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Node1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" --Bridge Forward--"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Node2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" --Bridge Forward--"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Node3 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" --"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Subscriber\n              ---------                     ---------                     ---------\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[t._v("工作在桥接模式下和工作在集群模式下有不同的应用场景，桥接可以完成一些单纯使用集群无法实现的功能：")]),t._v(" "),e("ul",[e("li",[t._v("跨 VPC 部署。由于桥接不需要复制主题树和路由表，对于网络稳定性和延迟的要求相对于集群更低，桥接模式下不同的节点可以部署在不同的 VPC 上，客户端可以选择物理上比较近的节点连接，提高整个应用的覆盖能力。")]),t._v(" "),e("li",[t._v("支持异构节点。由于桥接的本质是对消息的转发和订阅，所以理论上凡是支持 MQTT 协议的消息中间件都可以被桥接到 EMQX，甚至一些使用其他协议的消息服务，如果有协议适配器，也可以通过桥接转发消息过去。")]),t._v(" "),e("li",[t._v("提高单个应用的服务上限。由于内部的系统开销，单个的 EMQX 有节点数上限。如果将多个集群桥接起来，按照业务需求设计桥接规则，可以将应用的服务上限再提高一个等级。\n在具体应用中，一个桥接的发起节点可以被近似的看作一个远程节点的客户端。")])]),t._v(" "),e("h2",{attrs:{id:"桥接插件列表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#桥接插件列表"}},[t._v("#")]),t._v(" 桥接插件列表")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("存储插件")]),t._v(" "),e("th",[t._v("配置文件")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("emqx_bridge_mqtt")]),t._v(" "),e("td",[t._v("emqx_bridge_mqtt.conf")]),t._v(" "),e("td",[t._v("MQTT Broker 消息转发")])]),t._v(" "),e("tr",[e("td",[t._v("emqx_bridge_kafka")]),t._v(" "),e("td",[t._v("emqx_bridge_kafka.conf")]),t._v(" "),e("td",[t._v("Kafka 消息队列")])]),t._v(" "),e("tr",[e("td",[t._v("emqx_bridge_rabbit")]),t._v(" "),e("td",[t._v("emqx_bridge_rabbit.conf")]),t._v(" "),e("td",[t._v("RabbitMQ 消息队列")])]),t._v(" "),e("tr",[e("td",[t._v("emqx_bridge_pulsar")]),t._v(" "),e("td",[t._v("emqx_bridge_pulsar.conf")]),t._v(" "),e("td",[t._v("Pulsar 消息队列")])]),t._v(" "),e("tr",[e("td",[t._v("emqx_bridge_rocket")]),t._v(" "),e("td",[t._v("emqx_bridge_rocket.conf")]),t._v(" "),e("td",[t._v("RocketMQ 消息队列")])])])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),e("p",[t._v("推荐使用\n"),e("RouterLink",{attrs:{to:"/zh/enterprise/latest/rule/rule-engine.html"}},[t._v("规则引擎")]),t._v("\n以实现更灵活的桥接功能。")],1)])])}),[],!1,null,null,null);r.default=_.exports}}]);