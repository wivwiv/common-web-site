(window.webpackJsonp=window.webpackJsonp||[]).push([[194],{1685:function(e,s,n){"use strict";n.r(s);var t=n(10),r=Object(t.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"多语言-钩子扩展"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多语言-钩子扩展"}},[e._v("#")]),e._v(" 多语言 - 钩子扩展")]),e._v(" "),t("p",[e._v("多语言的 "),t("strong",[e._v("钩子扩展")]),e._v(" 由 "),t("strong",[e._v("emqx-exhook")]),e._v(" 插件进行支持。它允许用户使用其它编程（例如：Python, Java 等）直接向 EMQX 挂载钩子，以接收并处理 EMQX 系统的事件，达到扩展和定制 EMQX 的目的。例如，用户可以使用其他编程语言来实现：")]),e._v(" "),t("ul",[t("li",[e._v("客户端接入的认证授权")]),e._v(" "),t("li",[e._v("发布/订阅的 ACL 鉴权")]),e._v(" "),t("li",[e._v("消息的持久化，桥接")]),e._v(" "),t("li",[e._v("发布/订阅，或者客户端上下线事件的通知处理")])]),e._v(" "),t("h2",{attrs:{id:"设计"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设计"}},[e._v("#")]),e._v(" 设计")]),e._v(" "),t("p",[t("strong",[e._v("emqx-exhook")]),e._v(" 使用 "),t("a",{attrs:{href:"https://www.grpc.io",target:"_blank",rel:"noopener noreferrer"}},[e._v("gRPC"),t("OutboundLink")],1),e._v(" 作为 RPC 的通信框架。")]),e._v(" "),t("p",[e._v("架构如下图：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("  EMQX\n+========================+                 +========+==========+\n|    ExHook              |                 |        |          |\n|   +----------------+   |      gRPC       | gRPC   |  User's  |\n|   |   gRPC Client  | ------------------\x3e | Server |  Codes   |\n|   +----------------+   |    (HTTP/2)     |        |          |\n|                        |                 |        |          |\n+========================+                 +========+==========+\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br")])]),t("p",[e._v("它表明：EMQX 作为一个 gRPC 客户端，将系统中的钩子事件发送到用户的 gRPC 服务端。")]),e._v(" "),t("p",[e._v("和 EMQX 原生的钩子一致，它也支持链式的方式计算和返回：")]),e._v(" "),t("p",[t("img",{attrs:{src:n(398),alt:"chain_of_responsiblity"}})]),e._v(" "),t("h2",{attrs:{id:"接口设计"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#接口设计"}},[e._v("#")]),e._v(" 接口设计")]),e._v(" "),t("p",[e._v("作为事件的处理端，即 gRPC 的服务端。它需要用户自定义实现需要挂载的钩子列表，和每个钩子事件到达后如何去处理的回调函数。这些接口被定义为一个名为 "),t("code",[e._v("HookProvider")]),e._v(" 的 gRPC 服务，其需要实现的接口的列表包含：")]),e._v(" "),t("div",{staticClass:"language-protobuff line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('syntax = "proto3";\n\npackage emqx.exhook.v1;\n\nservice HookProvider {\n\n  rpc OnProviderLoaded(ProviderLoadedRequest) returns (LoadedResponse) {};\n\n  rpc OnProviderUnloaded(ProviderUnloadedRequest) returns (EmptySuccess) {};\n\n  rpc OnClientConnect(ClientConnectRequest) returns (EmptySuccess) {};\n\n  rpc OnClientConnack(ClientConnackRequest) returns (EmptySuccess) {};\n\n  rpc OnClientConnected(ClientConnectedRequest) returns (EmptySuccess) {};\n\n  rpc OnClientDisconnected(ClientDisconnectedRequest) returns (EmptySuccess) {};\n\n  rpc OnClientAuthenticate(ClientAuthenticateRequest) returns (ValuedResponse) {};\n\n  rpc OnClientCheckAcl(ClientCheckAclRequest) returns (ValuedResponse) {};\n\n  rpc OnClientSubscribe(ClientSubscribeRequest) returns (EmptySuccess) {};\n\n  rpc OnClientUnsubscribe(ClientUnsubscribeRequest) returns (EmptySuccess) {};\n\n  rpc OnSessionCreated(SessionCreatedRequest) returns (EmptySuccess) {};\n\n  rpc OnSessionSubscribed(SessionSubscribedRequest) returns (EmptySuccess) {};\n\n  rpc OnSessionUnsubscribed(SessionUnsubscribedRequest) returns (EmptySuccess) {};\n\n  rpc OnSessionResumed(SessionResumedRequest) returns (EmptySuccess) {};\n\n  rpc OnSessionDiscarded(SessionDiscardedRequest) returns (EmptySuccess) {};\n\n  rpc OnSessionTakeovered(SessionTakeoveredRequest) returns (EmptySuccess) {};\n\n  rpc OnSessionTerminated(SessionTerminatedRequest) returns (EmptySuccess) {};\n\n  rpc OnMessagePublish(MessagePublishRequest) returns (ValuedResponse) {};\n\n  rpc OnMessageDelivered(MessageDeliveredRequest) returns (EmptySuccess) {};\n\n  rpc OnMessageDropped(MessageDroppedRequest) returns (EmptySuccess) {};\n\n  rpc OnMessageAcked(MessageAckedRequest) returns (EmptySuccess) {};\n}\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br"),t("span",{staticClass:"line-number"},[e._v("21")]),t("br"),t("span",{staticClass:"line-number"},[e._v("22")]),t("br"),t("span",{staticClass:"line-number"},[e._v("23")]),t("br"),t("span",{staticClass:"line-number"},[e._v("24")]),t("br"),t("span",{staticClass:"line-number"},[e._v("25")]),t("br"),t("span",{staticClass:"line-number"},[e._v("26")]),t("br"),t("span",{staticClass:"line-number"},[e._v("27")]),t("br"),t("span",{staticClass:"line-number"},[e._v("28")]),t("br"),t("span",{staticClass:"line-number"},[e._v("29")]),t("br"),t("span",{staticClass:"line-number"},[e._v("30")]),t("br"),t("span",{staticClass:"line-number"},[e._v("31")]),t("br"),t("span",{staticClass:"line-number"},[e._v("32")]),t("br"),t("span",{staticClass:"line-number"},[e._v("33")]),t("br"),t("span",{staticClass:"line-number"},[e._v("34")]),t("br"),t("span",{staticClass:"line-number"},[e._v("35")]),t("br"),t("span",{staticClass:"line-number"},[e._v("36")]),t("br"),t("span",{staticClass:"line-number"},[e._v("37")]),t("br"),t("span",{staticClass:"line-number"},[e._v("38")]),t("br"),t("span",{staticClass:"line-number"},[e._v("39")]),t("br"),t("span",{staticClass:"line-number"},[e._v("40")]),t("br"),t("span",{staticClass:"line-number"},[e._v("41")]),t("br"),t("span",{staticClass:"line-number"},[e._v("42")]),t("br"),t("span",{staticClass:"line-number"},[e._v("43")]),t("br"),t("span",{staticClass:"line-number"},[e._v("44")]),t("br"),t("span",{staticClass:"line-number"},[e._v("45")]),t("br"),t("span",{staticClass:"line-number"},[e._v("46")]),t("br"),t("span",{staticClass:"line-number"},[e._v("47")]),t("br"),t("span",{staticClass:"line-number"},[e._v("48")]),t("br")])]),t("p",[e._v("其中 HookProvider 部分：")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("OnProviderLoaded")]),e._v("：定义 HookProvider 如何被加载，返回需要挂载的钩子列表。仅在该列表中的钩子会被回调到 HookProivder 服务。")]),e._v(" "),t("li",[t("code",[e._v("OnProviderUnloaded")]),e._v("：通知用户该 HookProvier 已经从 emqx 中卸载。")])]),e._v(" "),t("p",[e._v("钩子事件部分：")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("OnClient*")]),e._v("，"),t("code",[e._v("OnSession*")]),e._v("，"),t("code",[e._v("OnMessage*")]),e._v(" 为前缀的方法与 "),t("RouterLink",{attrs:{to:"/zh/enterprise/latest/advanced/hooks.html"}},[e._v("钩子")]),e._v(" 的当中的方法一一对应。它们有着相同的调用时机和相似的参数列表。")],1),e._v(" "),t("li",[e._v("仅 "),t("code",[e._v("OnClientAuthenticate")]),e._v("，"),t("code",[e._v("OnClientCheckAcl")]),e._v("，"),t("code",[e._v("OnMessagePublish")]),e._v(" 允许携带返回值到 EMQX 系统，其它回调则不支持。")])]),e._v(" "),t("p",[e._v("其中接口和参数数据结构的详情参考："),t("a",{attrs:{href:"https://github.com/emqx/emqx/blob/v4.3-beta.1/apps/emqx_exhook/priv/protos/exhook.proto",target:"_blank",rel:"noopener noreferrer"}},[e._v("exhook.proto"),t("OutboundLink")],1)]),e._v(" "),t("h2",{attrs:{id:"开发指南"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开发指南"}},[e._v("#")]),e._v(" 开发指南")]),e._v(" "),t("p",[e._v("用户在使用多语言扩展钩子的功能时，需要实现 "),t("code",[e._v("HookProvider")]),e._v(" 的 gRPC 服务来接收 EMQX 的回调事件。")]),e._v(" "),t("p",[e._v("其步骤如下：")]),e._v(" "),t("ol",[t("li",[e._v("拷贝 "),t("code",[e._v("lib/emqx_exhook-<x.y.z>/priv/protos/exhook.proto")]),e._v(" 文件到你的项目中。")]),e._v(" "),t("li",[e._v("使用对应编程语言的 gRPC 框架，生成 "),t("code",[e._v("exhook.proto")]),e._v(" 的 gRPC 服务端的代码。")]),e._v(" "),t("li",[e._v("按需实现 exhook.proto 中定义的接口。")])]),e._v(" "),t("p",[e._v("开发完成后，需将该服务部署到与 EMQX 能够通信的服务器上，并保证端口的开放。")]),e._v(" "),t("p",[e._v("然后修改 "),t("code",[e._v("etc/plugins/emqx_exhook.conf")]),e._v(" 中的服务器配置，例如：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("exhook.server.default.url = http://127.0.0.1:9000\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("启动 "),t("code",[e._v("emqx_exhook")]),e._v(" 插件，观察输出。")]),e._v(" "),t("p",[e._v("其中各个语言的 gRPC 框架可参考："),t("a",{attrs:{href:"https://github.com/grpc-ecosystem/awesome-grpc",target:"_blank",rel:"noopener noreferrer"}},[e._v("grpc-ecosystem/awesome-grpc"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("我们也提供了一些常见编程语言的示例程序："),t("a",{attrs:{href:"https://github.com/emqx/emqx-extension-examples",target:"_blank",rel:"noopener noreferrer"}},[e._v("emqx-extension-examples"),t("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports},398:function(e,s,n){e.exports=n.p+"docs-assets/img/chain_of_responsiblity.863497e8.png"}}]);