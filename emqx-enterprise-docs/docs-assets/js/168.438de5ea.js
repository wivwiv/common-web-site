(window.webpackJsonp=window.webpackJsonp||[]).push([[168],{1670:function(s,t,a){"use strict";a.r(t);var e=a(10),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"认证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#认证"}},[s._v("#")]),s._v(" 认证")]),s._v(" "),e("p",[s._v("身份认证是大多数应用的重要组成部分，启用身份认证能有效阻止非法客户端的连接。")]),s._v(" "),e("p",[s._v("EMQX 中的认证指的是当一个客户端连接到 EMQX 的时候，通过服务器端的配置来控制客户端连接服务器的权限。")]),s._v(" "),e("p",[s._v("EMQX 的认证支持包括两个层面：")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("MQTT 协议规范允许在 CONNECT 报文中指定用户名和密码，EMQX 以插件形式支持基于 Username、ClientID、HTTP、JWT、LDAP 及各类数据库如 MongoDB、MySQL、PostgreSQL、Redis 等多种形式的认证。")])]),s._v(" "),e("li",[e("p",[s._v("在传输层上，TLS 可以保证使用客户端证书的客户端到服务器的身份验证(X.509 证书认证)，并确保服务器向客户端验证服务器证书。也支持基于 PSK 的 TLS/DTLS 认证。")])])]),s._v(" "),e("p",[s._v("本章节介绍了 EMQX 支持的认证方式以及对应的配置方法。")]),s._v(" "),e("h2",{attrs:{id:"认证方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#认证方式"}},[s._v("#")]),s._v(" 认证方式")]),s._v(" "),e("p",[s._v("EMQX 支持使用内置数据源（文件、内置数据库）、JWT、外部主流数据库和自定义 HTTP API 作为身份认证数据源。")]),s._v(" "),e("p",[s._v("连接数据源、进行认证逻辑通过插件实现的，每个插件对应一种认证方式，使用前需要启用相应的插件。")]),s._v(" "),e("p",[s._v("客户端连接时插件通过检查其 username/clientid 和 password 是否与指定数据源的信息一致来实现对客户端的身份认证。")]),s._v(" "),e("p",[s._v("EMQX 支持的认证方式：")]),s._v(" "),e("p",[e("strong",[s._v("内置数据源")])]),s._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/zh/enterprise/latest/modules/mnesia_authentication.html"}},[s._v("内置数据库 认证/访问控制")])],1)]),s._v(" "),e("p",[s._v("使用配置文件与 EMQX 内置数据库提供认证数据源，通过 HTTP API 进行管理，足够简单轻量。")]),s._v(" "),e("p",[e("strong",[s._v("外部数据库")])]),s._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/zh/enterprise/latest/modules/mysql_authentication.html"}},[s._v("MySQL 认证/访问控制")])],1),s._v(" "),e("li",[e("RouterLink",{attrs:{to:"/zh/enterprise/latest/modules/pgsql_authentication.html"}},[s._v("PostgreSQL 认证/访问控制")])],1),s._v(" "),e("li",[e("RouterLink",{attrs:{to:"/zh/enterprise/latest/modules/redis_authentication.html"}},[s._v("Redis 认证/访问控制")])],1),s._v(" "),e("li",[e("RouterLink",{attrs:{to:"/zh/enterprise/latest/modules/mongo_authentication.html"}},[s._v("MongoDB 认证/访问控制")])],1),s._v(" "),e("li",[e("RouterLink",{attrs:{to:"/zh/enterprise/latest/modules/ldap_authentication.html"}},[s._v("LDAP 认证/访问控制")])],1)]),s._v(" "),e("p",[s._v("外部数据库可以存储大量数据，同时方便与外部设备管理系统集成。")]),s._v(" "),e("p",[e("strong",[s._v("其他")])]),s._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/zh/enterprise/latest/modules/http_authentication.html"}},[s._v("HTTP 认证/访问控制")])],1),s._v(" "),e("li",[e("RouterLink",{attrs:{to:"/zh/enterprise/latest/modules/jwt_authentication.html"}},[s._v("JWT 认证")])],1)]),s._v(" "),e("p",[s._v("JWT 认证可以批量签发认证信息，HTTP 认证能够实现复杂的认证鉴权逻辑。")]),s._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),e("p",[s._v("更改插件配置后需要重启插件才能生效，部分认证鉴权插件包含 "),e("RouterLink",{attrs:{to:"/zh/enterprise/latest/advanced/acl.html"}},[s._v("ACL 功能")]),s._v("。")],1)]),s._v(" "),e("h2",{attrs:{id:"认证结果"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#认证结果"}},[s._v("#")]),s._v(" 认证结果")]),s._v(" "),e("p",[s._v("任何一种认证方式最终都会返回一个结果：")]),s._v(" "),e("ul",[e("li",[s._v("认证成功：经过比对客户端认证成功")]),s._v(" "),e("li",[s._v("认证失败：经过比对客户端认证失败，数据源中密码与当前密码不一致")]),s._v(" "),e("li",[s._v("忽略认证（ignore）：当前认证方式中未查找到认证数据，无法显式判断结果是成功还是失败，交由认证链下一认证方式或匿名认证来判断")])]),s._v(" "),e("h2",{attrs:{id:"匿名认证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#匿名认证"}},[s._v("#")]),s._v(" 匿名认证")]),s._v(" "),e("p",[s._v("EMQ  X 默认配置中启用了匿名认证，任何客户端都能接入 EMQX。没有启用认证插件或认证插件没有显式允许/拒绝（ignore）连接请求时，EMQX 将根据匿名认证启用情况决定是否允许客户端连接。")]),s._v(" "),e("p",[s._v("配置匿名认证开关：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# etc/emqx.conf")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## Value: true | false")]),s._v("\nallow_anonymous "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("div",{staticClass:"custom-block danger"},[e("p",{staticClass:"custom-block-title"},[s._v("警告")]),s._v(" "),e("p",[s._v("生产环境中请禁用匿名认证。")])]),s._v(" "),e("h2",{attrs:{id:"密码加盐规则与哈希方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#密码加盐规则与哈希方法"}},[s._v("#")]),s._v(" 密码加盐规则与哈希方法")]),s._v(" "),e("p",[s._v("EMQX 多数认证插件中可以启用哈希方法，数据源中仅保存密码密文，保证数据安全。")]),s._v(" "),e("p",[s._v("启用哈希方法时，用户可以为每个客户端都指定一个 salt（盐）并配置加盐规则，数据库中存储的密码是按照加盐规则与哈希方法处理后的密文。")]),s._v(" "),e("p",[s._v("以 MySQL 认证为例：")]),s._v(" "),e("p",[e("strong",[s._v("加盐规则与哈希方法配置：")])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# etc/plugins/emqx_auth_mysql.conf")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 不加盐，仅做哈希处理")]),s._v("\nauth.mysql.password_hash "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sha256\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## salt 前缀：使用 sha256 加密 salt + 密码 拼接的字符串")]),s._v("\nauth.mysql.password_hash "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" salt,sha256\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## salt 后缀：使用 sha256 加密 密码 + salt 拼接的字符串")]),s._v("\nauth.mysql.password_hash "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sha256,salt\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## pbkdf2 with macfun iterations dklen")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## macfun: md4, md5, ripemd160, sha, sha224, sha256, sha384, sha512")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## auth.mysql.password_hash = pbkdf2,sha256,1000,20")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),s._v(" "),e("h3",{attrs:{id:"如何生成认证信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何生成认证信息"}},[s._v("#")]),s._v(" 如何生成认证信息")]),s._v(" "),e("ol",[e("li",[s._v("为每个客户端分用户名、Client ID、密码以及 salt（盐）等信息")]),s._v(" "),e("li",[s._v("使用与 MySQL 认证相同加盐规则与哈希方法处理客户端信息得到密文")]),s._v(" "),e("li",[s._v("将客户端信息写入数据库，客户端的密码应当为密文信息")])]),s._v(" "),e("h3",{attrs:{id:"emqx-身份认证流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#emqx-身份认证流程"}},[s._v("#")]),s._v(" EMQX 身份认证流程")]),s._v(" "),e("ol",[e("li",[s._v("根据配置的认证 SQL 结合客户端传入的信息，查询出密码（密文）和 salt（盐）等认证数据，没有查询结果时，认证将终止并返回 ignore 结果")]),s._v(" "),e("li",[s._v("根据配置的加盐规则与哈希方法计算得到密文，没有启用哈希方法则跳过此步")]),s._v(" "),e("li",[s._v("将数据库中存储的密文与当前客户端计算的到的密文进行比对，比对成功则认证通过，否则认证失败")])]),s._v(" "),e("p",[s._v("PostgreSQL 认证功能逻辑图：")]),s._v(" "),e("p",[e("img",{attrs:{src:a(954),alt:"image-20200217154254202"}})]),s._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),e("p",[s._v("写入数据的加盐规则、哈希方法与对应插件的配置一致时认证才能正常进行。更改哈希方法会造成现有认证数据失效。")])]),s._v(" "),e("h2",{attrs:{id:"认证链"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#认证链"}},[s._v("#")]),s._v(" 认证链")]),s._v(" "),e("p",[s._v("当同时启用多个认证方式时，EMQX 将按照插件开启先后顺序进行链式认证：")]),s._v(" "),e("ul",[e("li",[s._v("一旦认证成功，终止认证链并允许客户端接入")]),s._v(" "),e("li",[s._v("一旦认证失败，终止认证链并禁止客户端接入")]),s._v(" "),e("li",[s._v("直到最后一个认证方式仍未通过，根据"),e("strong",[s._v("匿名认证")]),s._v("配置判定\n"),e("ul",[e("li",[s._v("匿名认证开启时，允许客户端接入")]),s._v(" "),e("li",[s._v("匿名认证关闭时，禁止客户端接入")])])])]),s._v(" "),e("p",[e("img",{attrs:{src:a(955),alt:"_images/guide_2.png"}})]),s._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),e("p",[s._v("同时只启用一个认证插件可以提高客户端身份认证效率。")])]),s._v(" "),e("h2",{attrs:{id:"tls-认证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tls-认证"}},[s._v("#")]),s._v(" TLS 认证")]),s._v(" "),e("p",[s._v("MQTT TLS 的默认端口是 8883：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("listener.ssl.external "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("8883")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("配置证书和 CA：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("listener.ssl.external.keyfile "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" etc/certs/key.pem\nlistener.ssl.external.certfile "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" etc/certs/cert.pem\nlistener.ssl.external.cacertfile "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" etc/certs/cacert.pem\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("注意，默认的 "),e("code",[s._v("etc/certs")]),s._v(" 目录下面的 "),e("code",[s._v("key.pem")]),s._v("、"),e("code",[s._v("cert.pem")]),s._v(" 和 "),e("code",[s._v("cacert.pem")]),s._v(" 是 EMQX 生成的自签名证书，所以在使用支持 TLS 的客户端测试的时候，需要将上面的 CA 证书 "),e("code",[s._v("etc/certs/cacert.pem")]),s._v(" 配置到客户端。")]),s._v(" "),e("p",[s._v("服务端支持的 cipher 列表需要显式指定，默认的列表与 Mozilla 的服务端 cipher 列表一致：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("listener.ssl.external.ciphers "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ECDHE-ECDSA-AES256-GCM-SHA384,ECDHE-RSA-AES256-GCM-SHA384,ECDHE-ECDSA-AES256-SHA384,ECDHE-RSA-AES256-SHA384,ECDHE-ECDSA-DES-CBC3-SHA,ECDH-ECDSA-AES256-GCM-SHA384,ECDH-RSA-AES256-GCM-SHA384,ECDH-ECDSA-AES256-SHA384,ECDH-RSA-AES256-SHA384,DHE-DSS-AES256-GCM-SHA384,DHE-DSS-AES256-SHA256,AES256-GCM-SHA384,AES256-SHA256,ECDHE-ECDSA-AES128-GCM-SHA256,ECDHE-RSA-AES128-GCM-SHA256,ECDHE-ECDSA-AES128-SHA256,ECDHE-RSA-AES128-SHA256,ECDH-ECDSA-AES128-GCM-SHA256,ECDH-RSA-AES128-GCM-SHA256,ECDH-ECDSA-AES128-SHA256,ECDH-RSA-AES128-SHA256,DHE-DSS-AES128-GCM-SHA256,DHE-DSS-AES128-SHA256,AES128-GCM-SHA256,AES128-SHA256,ECDHE-ECDSA-AES256-SHA,ECDHE-RSA-AES256-SHA,DHE-DSS-AES256-SHA,ECDH-ECDSA-AES256-SHA,ECDH-RSA-AES256-SHA,AES256-SHA,ECDHE-ECDSA-AES128-SHA,ECDHE-RSA-AES128-SHA,DHE-DSS-AES128-SHA,ECDH-ECDSA-AES128-SHA,ECDH-RSA-AES128-SHA,AES128-SHA\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"psk-认证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#psk-认证"}},[s._v("#")]),s._v(" PSK 认证")]),s._v(" "),e("p",[s._v("如果希望使用 PSK 认证，需要将 "),e("a",{attrs:{href:"#auth-tls"}},[s._v("TLS 认证")]),s._v(" 中的 "),e("code",[s._v("listener.ssl.external.ciphers")]),s._v(" 注释掉，然后配置 "),e("code",[s._v("listener.ssl.external.psk_ciphers")]),s._v("：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#listener.ssl.external.ciphers = ECDHE-ECDSA-AES256-GCM-SHA384,...")]),s._v("\nlistener.ssl.external.psk_ciphers "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" PSK-AES128-CBC-SHA,PSK-AES256-CBC-SHA,PSK-3DES-EDE-CBC-SHA,PSK-RC4-SHA\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("然后启用 emqx_psk_file 插件：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("$ emqx_ctl plugins load emqx_psk_file\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("PSK 的配置文件为 "),e("code",[s._v("etc/psk.txt")]),s._v("，使用冒号"),e("code",[s._v(":")]),s._v(" 分隔 PSK ID 和 PSK：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("client1:1234\nclient2:abcd\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])])])}),[],!1,null,null,null);t.default=r.exports},954:function(s,t,a){s.exports=a.p+"docs-assets/img/image-20200217154254202.73f93538.png"},955:function(s,t,a){s.exports=a.p+"docs-assets/img/guide_2.708b25fd.png"}}]);