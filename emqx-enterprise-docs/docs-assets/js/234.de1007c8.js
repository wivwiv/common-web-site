(window.webpackJsonp=window.webpackJsonp||[]).push([[234],{1500:function(t,e,o){"use strict";o.r(e);var r=o(10),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"multi-language-support"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#multi-language-support"}},[t._v("#")]),t._v(" Multi-language support")]),t._v(" "),o("p",[t._v("Since 4.1, EMQX provides "),o("strong",[t._v("multi-language support")]),t._v(". It allows users to use Python, Java or other programming languages to handle EMQX's "),o("RouterLink",{attrs:{to:"/en/enterprise/latest/advanced/hooks.html"}},[t._v("hooks")]),t._v(", or parse your private protocol on TCP/UDP transport. In this way, you can customize EMQX with other programming languages.")],1),t._v(" "),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"custom-block-title"},[t._v("Tip")]),t._v(" "),o("ul",[o("li",[o("p",[t._v("In 4.1 and 4.2, this functional was implemented using "),o("a",{attrs:{href:"https://github.com/emqx/erlport",target:"_blank",rel:"noopener noreferrer"}},[t._v("erlport"),o("OutboundLink")],1),t._v(" as the low-level communication support, and it was upgraded to "),o("a",{attrs:{href:"https://grpc.io",target:"_blank",rel:"noopener noreferrer"}},[t._v("gRPC"),o("OutboundLink")],1),t._v(" in the 4.3. "),o("strong",[t._v("These two version interface are not compatible")]),t._v(". Please check the corresponding documentation for the older implemented.")])]),t._v(" "),o("li",[o("p",[t._v("After 4.3, all hooks are publicly supported.")])])])]),t._v(" "),o("h2",{attrs:{id:"extension-hook"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#extension-hook"}},[t._v("#")]),t._v(" Extension Hook")]),t._v(" "),o("p",[t._v("The "),o("strong",[t._v("Extension Hook")]),t._v(" is supported by the "),o("strong",[t._v("emqx-exhook")]),t._v(" plugin. It allows users to process EMQX's "),o("RouterLink",{attrs:{to:"/en/enterprise/latest/advanced/hooks.html"}},[t._v("Hooks")]),t._v(" using other programming languages. For example:")],1),t._v(" "),o("ul",[o("li",[t._v("Check the login permission for a client.")]),t._v(" "),o("li",[t._v("Check the PUB/SUB operation privileges for a client.")]),t._v(" "),o("li",[t._v("Bridge or Store a message")])]),t._v(" "),o("p",[t._v("See: "),o("RouterLink",{attrs:{to:"/en/enterprise/latest/advanced/lang-exhook.html"}},[t._v("Extension Hook")]),t._v(".")],1),t._v(" "),o("h2",{attrs:{id:"extension-protocol"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#extension-protocol"}},[t._v("#")]),t._v(" Extension Protocol")]),t._v(" "),o("p",[t._v("The "),o("strong",[t._v("Extension Protocol")]),t._v(" is supported by the "),o("strong",[t._v("emqx-exproto")]),t._v(" plugin. It allows users to implement their private access protocol using other programming languages. In the "),o("code",[t._v("emqx-exproto")]),t._v(", you can:")]),t._v(" "),o("ul",[o("li",[t._v("Establish a connection based on TCP/SSL/UDP/DTLS")]),t._v(" "),o("li",[t._v("Subscribe a topic to receive messages and deliver it to your client")]),t._v(" "),o("li",[t._v("Parse bytes and publish it to EMQX")])]),t._v(" "),o("h2",{attrs:{id:"historical-legacy"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#historical-legacy"}},[t._v("#")]),t._v(" Historical Legacy")]),t._v(" "),o("p",[t._v("Prior to EMQX 4.1, only Lua support was included, and it was implemented by "),o("code",[t._v("emqx-lua-hook")]),t._v(". This plugin only supports handling of hooks, not protocol access.")]),t._v(" "),o("p",[t._v("See: "),o("RouterLink",{attrs:{to:"/en/enterprise/latest/advanced/lang-lua.html"}},[t._v("Lua Support")]),t._v(".")],1)])}),[],!1,null,null,null);e.default=s.exports}}]);